{"ast":null,"code":"var _jsxFileName = \"/Users/fanyukun/Documents/react/Indielog/src/pages/Music/index.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { setCurrentSong } from \"../../redux/reducers/songReducer\";\nimport { setMode, setIsPlaying } from \"../../redux/reducers/playerControlReducer\";\nimport Carou from '../../components/Carousel/index.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { toggleSongLiked } from '../../utils/firebase';\nimport { Container, SongsList, Title, Song, SongInfo, SongName, AuthorName, SongButtons, NumberDiv, Number, ImgDiv, SongDesc, LikeButtonDiv, ImgContainer, LikeNumber, HoverPlayButton } from './MusicElements.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Music = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(store => store.user.currentUser);\n  const songs = useSelector(store => store.song.songs);\n\n  async function playSong(song) {\n    await dispatch(setIsPlaying(true));\n    await dispatch(setCurrentSong(song));\n    await dispatch(setMode(2));\n  }\n\n  function toggleLiked(isLiked, songId) {\n    if (!user) {\n      alert('請先登入會員才能按讚～');\n      return;\n    }\n\n    toggleSongLiked(isLiked, songId, user.uid);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Carou, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SongsList, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\u71B1\\u9580\\u6392\\u884C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), songs.map((song, index) => {\n        const isLiked = song === null || song === void 0 ? void 0 : song.likedBy.includes(user === null || user === void 0 ? void 0 : user.uid);\n        return /*#__PURE__*/_jsxDEV(Song, {\n          children: [/*#__PURE__*/_jsxDEV(SongInfo, {\n            children: [/*#__PURE__*/_jsxDEV(NumberDiv, {\n              children: /*#__PURE__*/_jsxDEV(Number, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ImgContainer, {\n              children: [/*#__PURE__*/_jsxDEV(ImgDiv, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\",\n                  src: song === null || song === void 0 ? void 0 : song.cover\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(HoverPlayButton, {\n                onClick: () => playSong(song),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  size: \"2x\",\n                  icon: faPlay\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SongDesc, {\n              to: `/songs/${song === null || song === void 0 ? void 0 : song.id}`,\n              children: [/*#__PURE__*/_jsxDEV(SongName, {\n                children: song === null || song === void 0 ? void 0 : song.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AuthorName, {\n                children: song === null || song === void 0 ? void 0 : song.artist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SongButtons, {\n            children: /*#__PURE__*/_jsxDEV(LikeButtonDiv, {\n              isLiked: isLiked,\n              onClick: () => toggleLiked(isLiked, song.id),\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                size: \"1x\",\n                icon: faHeart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LikeNumber, {\n                isLiked: isLiked,\n                children: song === null || song === void 0 ? void 0 : song.likedBy.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, song === null || song === void 0 ? void 0 : song.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Music, \"eP80nNTCOoK40z0AbMILkBTaOCQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Music;\nexport default Music;\n\nvar _c;\n\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/Indielog/src/pages/Music/index.js"],"names":["useSelector","useDispatch","FontAwesomeIcon","faHeart","faPlay","setCurrentSong","setMode","setIsPlaying","Carou","toggleSongLiked","Container","SongsList","Title","Song","SongInfo","SongName","AuthorName","SongButtons","NumberDiv","Number","ImgDiv","SongDesc","LikeButtonDiv","ImgContainer","LikeNumber","HoverPlayButton","Music","dispatch","user","store","currentUser","songs","song","playSong","toggleLiked","isLiked","songId","alert","uid","map","index","likedBy","includes","cover","id","name","artist","length"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart, faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { setCurrentSong } from \"../../redux/reducers/songReducer\";\nimport { setMode, setIsPlaying } from \"../../redux/reducers/playerControlReducer\"\nimport Carou from '../../components/Carousel/index.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { toggleSongLiked } from '../../utils/firebase'\nimport {\n  Container,\n  SongsList,\n  Title,\n  Song,\n  SongInfo,\n  SongName,\n  AuthorName,\n  SongButtons,\n  NumberDiv,\n  Number,\n  ImgDiv,\n  SongDesc,\n  LikeButtonDiv,\n  ImgContainer,\n  LikeNumber,\n  HoverPlayButton,\n} from './MusicElements.js'\n\n\nconst Music = () => {\n  const dispatch = useDispatch()\n  const user = useSelector((store) => store.user.currentUser)\n  const songs = useSelector((store) => store.song.songs)\n  async function playSong(song){\n    await dispatch(setIsPlaying(true))\n    await dispatch(setCurrentSong(song))\n    await dispatch(setMode(2))\n  }\n\n  function toggleLiked(isLiked, songId) {\n    if(!user) {\n      alert('請先登入會員才能按讚～')\n      return\n    }\n    toggleSongLiked(isLiked, songId, user.uid)\n  }\n  return (\n    <Container >\n      <Carou />\n      <SongsList>\n        <Title>熱門排行</Title>\n        {songs.map((song,index) => {\n          const isLiked = song?.likedBy.includes(user?.uid)\n          return (\n            <Song key={song?.id}>\n              <SongInfo>\n                <NumberDiv>\n                  <Number>{index + 1}</Number>\n                </NumberDiv>\n                <ImgContainer>\n                  <ImgDiv>\n                    <img alt='' src={song?.cover}/>\n                  </ImgDiv>\n                  <HoverPlayButton onClick={() => playSong(song)}>\n                    <FontAwesomeIcon size=\"2x\" icon={faPlay} />\n                  </HoverPlayButton>\n                </ImgContainer>\n                <SongDesc to={`/songs/${song?.id}`}>\n                  <SongName>{song?.name}</SongName>\n                  <AuthorName>{song?.artist}</AuthorName>\n                </SongDesc>\n              </SongInfo>\n              <SongButtons>\n                <LikeButtonDiv isLiked={isLiked} onClick={() => toggleLiked(isLiked, song.id)}>\n                  <FontAwesomeIcon size='1x' icon={faHeart}/>\n                  <LikeNumber isLiked={isLiked}>{song?.likedBy.length}</LikeNumber>\n                </LikeButtonDiv>\n              </SongButtons>\n            </Song>\n          )\n        })}\n      </SongsList>\n    </Container>\n  )\n}\n\nexport default Music\n"]},"metadata":{},"sourceType":"module"}