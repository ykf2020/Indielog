{"ast":null,"code":"import _slicedToArray from\"/Users/fanyukun/Documents/react/Indielog/Indielog/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{useDispatch,useSelector}from\"react-redux\";import SignPanel from'../SignPanel';import Header from'../Header';import SideBar from'../SideBar';import{getSongsOnSnapShot,checkUserStatus}from'../../utils/firebase.js';import{setUser}from'../../redux/reducers/userReducer';import{setSongs,setCurrentSong}from\"../../redux/reducers/songReducer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Controls=function Controls(){var dispatch=useDispatch();var user=useSelector(function(store){return store.user.currentUser;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpenSideBar=_useState2[0],setIsOpenSideBar=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpenSignPanel=_useState4[0],setIsOpenSignPanel=_useState4[1];function toggleSideBar(){setIsOpenSideBar(!isOpenSideBar);}function toggleSignPanel(){setIsOpenSignPanel(!isOpenSignPanel);}function handleUser(res){dispatch(setUser(res));}function handleDefaultSongs(res){dispatch(setSongs(res));dispatch(setCurrentSong(res[0]));}useEffect(function(){getSongsOnSnapShot(handleDefaultSongs);checkUserStatus(handleUser);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[isOpenSignPanel&&!user&&/*#__PURE__*/_jsx(SignPanel,{isOpenSignPanel:isOpenSignPanel,toggleSignPanel:toggleSignPanel}),/*#__PURE__*/_jsx(Header,{isOpenSignPanel:isOpenSignPanel,toggleSignPanel:toggleSignPanel,toggleSideBar:toggleSideBar}),/*#__PURE__*/_jsx(SideBar,{toggleSignPanel:toggleSignPanel,isOpenSideBar:isOpenSideBar,toggleSideBar:toggleSideBar})]});};export default Controls;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/Indielog/Indielog/src/components/Controls/index.js"],"names":["useState","useEffect","useDispatch","useSelector","SignPanel","Header","SideBar","getSongsOnSnapShot","checkUserStatus","setUser","setSongs","setCurrentSong","Controls","dispatch","user","store","currentUser","isOpenSideBar","setIsOpenSideBar","isOpenSignPanel","setIsOpenSignPanel","toggleSideBar","toggleSignPanel","handleUser","res","handleDefaultSongs"],"mappings":"oIAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,OAASC,kBAAT,CAA6BC,eAA7B,KAAoD,yBAApD,CACA,OAASC,OAAT,KAAwB,kCAAxB,CACA,OAASC,QAAT,CAAmBC,cAAnB,KAAyC,kCAAzC,C,6IAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CACA,GAAMY,CAAAA,IAAI,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAN,CAAWE,WAAtB,EAAD,CAAxB,CACA,cAA0ChB,QAAQ,CAAC,KAAD,CAAlD,wCAAOiB,aAAP,eAAsBC,gBAAtB,eACA,eAA8ClB,QAAQ,CAAC,KAAD,CAAtD,yCAAOmB,eAAP,eAAwBC,kBAAxB,eAEA,QAASC,CAAAA,aAAT,EAAwB,CACtBH,gBAAgB,CAAC,CAACD,aAAF,CAAhB,CACD,CAED,QAASK,CAAAA,eAAT,EAA0B,CACxBF,kBAAkB,CAAC,CAACD,eAAF,CAAlB,CACD,CAED,QAASI,CAAAA,UAAT,CAAoBC,GAApB,CAAwB,CACtBX,QAAQ,CAACJ,OAAO,CAACe,GAAD,CAAR,CAAR,CACD,CAED,QAASC,CAAAA,kBAAT,CAA4BD,GAA5B,CAAgC,CAC9BX,QAAQ,CAACH,QAAQ,CAACc,GAAD,CAAT,CAAR,CACAX,QAAQ,CAACF,cAAc,CAACa,GAAG,CAAC,CAAD,CAAJ,CAAf,CAAR,CACD,CAEDvB,SAAS,CAAC,UAAM,CACdM,kBAAkB,CAACkB,kBAAD,CAAlB,CACAjB,eAAe,CAACe,UAAD,CAAf,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACE,2BACEJ,eAAe,EAAI,CAACL,IAArB,eACC,KAAC,SAAD,EACA,eAAe,CAAEK,eADjB,CAEA,eAAe,CAAEG,eAFjB,EAFF,cAOA,KAAC,MAAD,EACE,eAAe,CAAEH,eADnB,CAEE,eAAe,CAAEG,eAFnB,CAGE,aAAa,CAAED,aAHjB,EAPA,cAYA,KAAC,OAAD,EACE,eAAe,CAAEC,eADnB,CAEE,aAAa,CAAEL,aAFjB,CAGE,aAAa,CAAEI,aAHjB,EAZA,GADF,CAoBD,CAhDD,CAkDA,cAAeT,CAAAA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport SignPanel from '../SignPanel'\nimport Header from '../Header'\nimport SideBar from '../SideBar'\nimport { getSongsOnSnapShot, checkUserStatus } from '../../utils/firebase.js'\nimport { setUser } from '../../redux/reducers/userReducer'\nimport { setSongs, setCurrentSong } from \"../../redux/reducers/songReducer\"\n\n\nconst Controls = () => {\n  const dispatch = useDispatch()\n  const user = useSelector((store) => store.user.currentUser)\n  const [isOpenSideBar, setIsOpenSideBar] = useState(false)\n  const [isOpenSignPanel, setIsOpenSignPanel] = useState(false)\n\n  function toggleSideBar(){\n    setIsOpenSideBar(!isOpenSideBar)\n  }\n\n  function toggleSignPanel(){\n    setIsOpenSignPanel(!isOpenSignPanel)\n  }\n\n  function handleUser(res){\n    dispatch(setUser(res))\n  }\n\n  function handleDefaultSongs(res){\n    dispatch(setSongs(res))\n    dispatch(setCurrentSong(res[0]))\n  }\n\n  useEffect(() => {\n    getSongsOnSnapShot(handleDefaultSongs)\n    checkUserStatus(handleUser)\n  }, [])\n\n  return (\n    <>\n    {(isOpenSignPanel && !user) &&\n      <SignPanel\n      isOpenSignPanel={isOpenSignPanel}\n      toggleSignPanel={toggleSignPanel}\n      />\n    }\n    <Header\n      isOpenSignPanel={isOpenSignPanel}\n      toggleSignPanel={toggleSignPanel}\n      toggleSideBar={toggleSideBar}\n    />\n    <SideBar\n      toggleSignPanel={toggleSignPanel}\n      isOpenSideBar={isOpenSideBar}\n      toggleSideBar={toggleSideBar}\n    />\n    </>\n  )\n}\n\nexport default Controls\n"]},"metadata":{},"sourceType":"module"}