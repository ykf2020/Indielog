{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjquiByhMI0pc7g_Cx482Kp2tK-c1mlQ8\",\n  authDomain: \"indielog-172c8.firebaseapp.com\",\n  projectId: \"indielog-172c8\",\n  storageBucket: \"indielog-172c8.appspot.com\",\n  messagingSenderId: \"97403270536\",\n  appId: \"1:97403270536:web:5ea48f5aa3c58801bdf63d\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst usersDb = db.collection('users');\nconst postsDb = db.collection('posts');\nconst songsDb = db.collection('songs');\nconst topicsDb = db.collection('topics');\nexport const signOut = () => {\n  auth.signOut();\n};\nexport const checkUserStatus = handleUser => {\n  auth.onAuthStateChanged(user => {\n    if (user) {\n      handleUser({\n        uid: user.uid,\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL\n      });\n    } else {\n      handleUser(null);\n    }\n  });\n};\nexport const signIn = (email, password, handleSuccess, handleErrMessage) => {\n  auth.signInWithEmailAndPassword(email, password).then(() => {\n    handleSuccess();\n  }).catch(err => {\n    switch (err.code) {\n      case \"auth/invalid-email\":\n        handleErrMessage('信箱格式錯誤');\n        break;\n\n      case \"auth/user-not-found\":\n        handleErrMessage('信箱不存在');\n        break;\n\n      case \"auth/wrong-password\":\n        handleErrMessage('密碼錯誤');\n        break;\n\n      default:\n        handleErrMessage(err.code);\n    }\n  });\n};\nexport const forgetPassword = email => {\n  return auth.sendPasswordResetEmail(email);\n};\nexport const getTopics = handleTopics => {\n  topicsDb.get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleTopics(data);\n  });\n};\nexport const getPostsWithoutTopic = handlePosts => {\n  postsDb.orderBy('createdAt', 'desc').get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handlePosts(data);\n  });\n};\nexport const getPostsWithTopic = (topic, handlePosts) => {\n  postsDb.orderBy('createdAt', 'desc').where('topic', '==', topic).get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handlePosts(data);\n  });\n};\nexport const getAuthorInfo = (authorId, handleAuthorInfo) => {\n  usersDb.doc(authorId).get().then(userSnapShot => {\n    handleAuthorInfo(userSnapShot.data());\n  });\n};\nexport const addNewComment = (area, id, commentContent, authorId) => {\n  return db.collection(area).doc(id).collection('comments').doc().set({\n    content: commentContent,\n    createdAt: firebase.firestore.Timestamp.now(),\n    authorUid: authorId\n  });\n};\nexport const getCommentsOnSnapshot = (area, id, handleComments) => {\n  db.collection(area).doc(id).collection('comments').orderBy('createdAt', 'asc').onSnapshot(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      return {\n        authorUid: doc.data().authorUid,\n        content: doc.data().content,\n        createdAt: doc.data().createdAt\n      };\n    });\n    handleComments(data);\n  });\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/utils/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","auth","usersDb","collection","postsDb","songsDb","topicsDb","signOut","checkUserStatus","handleUser","onAuthStateChanged","user","uid","displayName","email","photoURL","signIn","password","handleSuccess","handleErrMessage","signInWithEmailAndPassword","then","catch","err","code","forgetPassword","sendPasswordResetEmail","getTopics","handleTopics","get","collectionSnapShot","data","docs","map","doc","id","getPostsWithoutTopic","handlePosts","orderBy","getPostsWithTopic","topic","where","getAuthorInfo","authorId","handleAuthorInfo","userSnapShot","addNewComment","area","commentContent","set","content","createdAt","Timestamp","now","authorUid","getCommentsOnSnapshot","handleComments","onSnapshot"],"mappings":"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","sourcesContent":["import firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/firestore'\nimport 'firebase/compat/storage'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjquiByhMI0pc7g_Cx482Kp2tK-c1mlQ8\",\n  authDomain: \"indielog-172c8.firebaseapp.com\",\n  projectId: \"indielog-172c8\",\n  storageBucket: \"indielog-172c8.appspot.com\",\n  messagingSenderId: \"97403270536\",\n  appId: \"1:97403270536:web:5ea48f5aa3c58801bdf63d\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst usersDb = db.collection('users')\nconst postsDb = db.collection('posts')\nconst songsDb = db.collection('songs')\nconst topicsDb = db.collection('topics')\n\n\nexport const signOut = () => {\n  auth.signOut()\n}\n\nexport const checkUserStatus = (handleUser) => {\n  auth.onAuthStateChanged((user) => {\n    if(user) {\n      handleUser({\n        uid: user.uid,\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL\n      })\n    } else {\n      handleUser(null)\n    }\n  })\n}\n\nexport const signIn = (email, password, handleSuccess, handleErrMessage) => {\n  auth.signInWithEmailAndPassword(email, password).then(() => {\n    handleSuccess()\n  }).catch((err) => {\n    switch(err.code) {\n      case \"auth/invalid-email\":\n        handleErrMessage('信箱格式錯誤')\n        break\n      case \"auth/user-not-found\":\n        handleErrMessage('信箱不存在')\n        break\n      case \"auth/wrong-password\":\n        handleErrMessage('密碼錯誤')\n        break\n      default:\n        handleErrMessage(err.code)\n    }\n  })\n}\n\nexport const forgetPassword = (email) => {\n  return auth.sendPasswordResetEmail(email)\n}\n\nexport const getTopics = (handleTopics) => {\n  topicsDb.get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleTopics(data)\n  })\n}\n\nexport const getPostsWithoutTopic = (handlePosts) => {\n  postsDb.orderBy('createdAt','desc').get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handlePosts(data)\n  })\n}\n\nexport const getPostsWithTopic = (topic, handlePosts) => {\n  postsDb.orderBy('createdAt','desc').where('topic','==',topic).get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handlePosts(data)\n  })\n}\n\nexport const getAuthorInfo = (authorId, handleAuthorInfo) => {\n  usersDb.doc(authorId).get().then((userSnapShot) => {\n    handleAuthorInfo(userSnapShot.data())\n  })\n}\n\nexport const addNewComment = (area, id, commentContent, authorId) => {\n  return db.collection(area).doc(id).collection('comments').doc().set({\n    content: commentContent,\n    createdAt: firebase.firestore.Timestamp.now(),\n    authorUid: authorId,\n  })\n}\n\nexport const getCommentsOnSnapshot = (area, id, handleComments) => {\n  db.collection(area).doc(id).collection('comments').orderBy('createdAt','asc').onSnapshot((collectionSnapShot) => {\n     const data = collectionSnapShot.docs.map((doc) => {\n       return {\n         authorUid: doc.data().authorUid,\n         content: doc.data().content,\n         createdAt: doc.data().createdAt\n       }\n     })\n     handleComments(data)\n  })\n}\n\nexport default firebase\n"]},"metadata":{},"sourceType":"module"}