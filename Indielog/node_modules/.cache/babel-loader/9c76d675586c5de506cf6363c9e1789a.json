{"ast":null,"code":"var _jsxFileName = \"/Users/fanyukun/Documents/react/indielog/src/components/CommentArea/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { CommentsContainer, CommentAddSection, Notice, CommentAddArea, CommentInfo, CommentorImgDiv, CommentorName, CommentorDate, CommentTextArea, CommentButtons, CommentContent } from './CommentAreaElements.js';\nimport Comment from '../Comment';\nimport firebase from '../../utils/firebase.js';\nimport 'firebase/compat/auth';\nimport \"firebase/compat/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = ({\n  postId\n}) => {\n  _s();\n\n  const user = firebase.auth().currentUser;\n  const [commentInput, setCommentInput] = useState('');\n  const [comments, setComments] = useState([]);\n  const [commentsWithAutorInfo, setCommentsWithAutorInfo] = useState([]);\n\n  const handleCommentInputSubmit = () => {\n    firebase.firestore().collection('posts').doc(postId).collection('comments').doc().set({\n      content: commentInput,\n      createdAt: firebase.firestore.Timestamp.now(),\n      authorUid: user.uid\n    }).then(() => {\n      setCommentInput('');\n    });\n  };\n\n  useEffect(() => {\n    firebase.firestore().collection('posts').doc(postId).collection('comments').onSnapshot(collectionSnapShot => {\n      const data = collectionSnapShot.docs.map(doc => {\n        return {\n          authorUid: doc.data().authorUid,\n          content: doc.data().content,\n          createdAt: doc.data().createdAt\n        };\n      });\n      setComments(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CommentsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CommentAddSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u7559\\u8A00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), user ? /*#__PURE__*/_jsxDEV(CommentAddArea, {\n        children: [/*#__PURE__*/_jsxDEV(CommentInfo, {\n          children: [/*#__PURE__*/_jsxDEV(CommentorImgDiv, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.photoURL ? user.photoURL : 'https://assets.juksy.com/files/articles/108444/800x_100_w-60934d08db2e1.jpg'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CommentorName, {\n            children: user.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommentTextArea, {\n          placeholder: \"\\u9EDE\\u6B64\\u8F38\\u5165\\u7559\\u8A00...\",\n          value: commentInput,\n          onChange: e => setCommentInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommentButtons, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: handleCommentInputSubmit,\n            children: \"\\u9001\\u51FA\\u7559\\u8A00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Notice, {\n        children: [\"\\u8ACB\\u5148\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u767B\\u5165\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), \"\\u4EE5\\u7559\\u8A00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentArea, \"JN1CaJwVqNvc+v4gIua6X84vo7g=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/components/CommentArea/index.js"],"names":["useState","useEffect","CommentsContainer","CommentAddSection","Notice","CommentAddArea","CommentInfo","CommentorImgDiv","CommentorName","CommentorDate","CommentTextArea","CommentButtons","CommentContent","Comment","firebase","CommentArea","postId","user","auth","currentUser","commentInput","setCommentInput","comments","setComments","commentsWithAutorInfo","setCommentsWithAutorInfo","handleCommentInputSubmit","firestore","collection","doc","set","content","createdAt","Timestamp","now","authorUid","uid","then","onSnapshot","collectionSnapShot","data","docs","map","photoURL","displayName","e","target","value","comment"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport {\n  CommentsContainer,\n  CommentAddSection,\n  Notice,\n  CommentAddArea,\n  CommentInfo,\n  CommentorImgDiv,\n  CommentorName,\n  CommentorDate,\n  CommentTextArea,\n  CommentButtons,\n  CommentContent,\n} from './CommentAreaElements.js'\nimport Comment from '../Comment'\nimport firebase from '../../utils/firebase.js'\nimport 'firebase/compat/auth';\nimport \"firebase/compat/firestore\"\n\nconst CommentArea = ({ postId }) => {\n  const user = firebase.auth().currentUser\n  const [commentInput, setCommentInput] = useState('')\n  const [comments, setComments] = useState([])\n  const [commentsWithAutorInfo, setCommentsWithAutorInfo] = useState([])\n  const handleCommentInputSubmit = () => {\n    firebase\n      .firestore()\n      .collection('posts')\n      .doc(postId)\n      .collection('comments')\n      .doc()\n      .set({\n        content: commentInput,\n        createdAt: firebase.firestore.Timestamp.now(),\n        authorUid: user.uid,\n      }).then(() => {\n        setCommentInput('')\n      })\n  }\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection('posts')\n      .doc(postId)\n      .collection('comments')\n      .onSnapshot((collectionSnapShot) => {\n         const data = collectionSnapShot.docs.map((doc) => {\n           return {\n             authorUid: doc.data().authorUid,\n             content: doc.data().content,\n             createdAt: doc.data().createdAt\n           }\n         })\n         setComments(data)\n      })\n  },[])\n  return (\n    <CommentsContainer>\n      <CommentAddSection>\n        <h3>留言</h3>\n        {user ?\n          <CommentAddArea>\n            <CommentInfo>\n              <CommentorImgDiv><img src={user.photoURL ? user.photoURL : 'https://assets.juksy.com/files/articles/108444/800x_100_w-60934d08db2e1.jpg'}/></CommentorImgDiv>\n              <CommentorName>{user.displayName}</CommentorName>\n            </CommentInfo>\n            <CommentTextArea placeholder='點此輸入留言...' value={commentInput} onChange={(e)=> setCommentInput(e.target.value)}>\n            </CommentTextArea>\n            <CommentButtons>\n              <p onClick={handleCommentInputSubmit}>送出留言</p>\n            </CommentButtons>\n          </CommentAddArea>\n          :\n          <Notice>請先<span>登入</span>以留言</Notice>\n        }\n      </CommentAddSection>\n      {comments.map(comment => {\n        return (\n          <Comment />\n        )\n      })}\n\n    </CommentsContainer>\n  )\n}\n\nexport default CommentArea\n"]},"metadata":{},"sourceType":"module"}