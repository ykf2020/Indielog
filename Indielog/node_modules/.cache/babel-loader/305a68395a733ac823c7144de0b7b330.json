{"ast":null,"code":"import _slicedToArray from\"/Users/fanyukun/Documents/react/indielog/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import Post from'../../components/Post';import{getTopics,getPostsAmount,getSeedPosts,getChangePagePosts}from'../../utils/firebase';import{useLocation}from'react-router-dom';import{BlogPageContainer,PostsContainer,TopicsContainer,Title,TopicsWrap,Topic,PostLink,PaginatorContainer,PageBtn}from'./BlogElements.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Blog=function Blog(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),topics=_useState2[0],setTopics=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),totalPages=_useState6[0],setTotalPages=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),currentPage=_useState8[0],setCurrentPage=_useState8[1];var location=useLocation();var urlSearchParams=new URLSearchParams(location.search);var currentTopic=urlSearchParams.get('topic');useEffect(function(){getTopics(setTopics);},[]);useEffect(function(){getPostsAmount(currentTopic,5,setTotalPages);getSeedPosts(currentTopic,5,setPosts);setCurrentPage(1);},[currentTopic]);function nextPage(){if(currentPage===totalPages)return;var lastRefPlace=5*currentPage;getChangePagePosts(currentTopic,5,setPosts,lastRefPlace);setCurrentPage(currentPage+1);}function prevPage(){if(currentPage===1)return;var lastRefPlace=5*(currentPage-2);getChangePagePosts(currentTopic,5,setPosts,lastRefPlace);setCurrentPage(currentPage-1);}return/*#__PURE__*/_jsxs(BlogPageContainer,{children:[/*#__PURE__*/_jsxs(TopicsContainer,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\u5206\\u985E\"}),/*#__PURE__*/_jsxs(TopicsWrap,{children:[/*#__PURE__*/_jsx(Topic,{to:\"/blog\",active:!currentTopic,children:\"\\u5168\\u90E8\\u6587\\u7AE0\"}),topics.map(function(topic){return/*#__PURE__*/_jsx(Topic,{to:\"/blog?topic=\".concat(topic.name),active:currentTopic===topic.name,children:topic.name},topic.id);})]})]}),/*#__PURE__*/_jsxs(PostsContainer,{children:[posts.map(function(post){return/*#__PURE__*/_jsx(PostLink,{to:\"/blogpost/\".concat(post.id),children:/*#__PURE__*/_jsx(Post,{createdAt:post.createdAt.toDate().toLocaleString([],{year:'numeric',month:'numeric',day:'numeric'}),imageUrl:post.imageUrl,topic:post.topic,title:post.title},post.id)},post.id);}),/*#__PURE__*/_jsxs(PaginatorContainer,{children:[totalPages>1&&currentPage!==1&&/*#__PURE__*/_jsx(PageBtn,{onClick:prevPage,children:\"\\uFF1C\"}),totalPages>1&&currentPage!==totalPages&&/*#__PURE__*/_jsx(PageBtn,{onClick:nextPage,children:\"\\uFF1E\"})]})]})]});};export default Blog;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/pages/Blog/index.js"],"names":["useState","useEffect","Post","getTopics","getPostsAmount","getSeedPosts","getChangePagePosts","useLocation","BlogPageContainer","PostsContainer","TopicsContainer","Title","TopicsWrap","Topic","PostLink","PaginatorContainer","PageBtn","Blog","topics","setTopics","posts","setPosts","totalPages","setTotalPages","currentPage","setCurrentPage","location","urlSearchParams","URLSearchParams","search","currentTopic","get","nextPage","lastRefPlace","prevPage","map","topic","name","id","post","createdAt","toDate","toLocaleString","year","month","day","imageUrl","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Post from '../../components/Post'\nimport { getTopics, getPostsAmount, getSeedPosts, getChangePagePosts } from '../../utils/firebase'\nimport { useLocation } from 'react-router-dom'\nimport {\n  BlogPageContainer,\n  PostsContainer,\n  TopicsContainer,\n  Title,\n  TopicsWrap,\n  Topic,\n  PostLink,\n  PaginatorContainer,\n  PageBtn\n} from './BlogElements.js'\n\n\n\n\nconst Blog = () => {\n  const [topics, setTopics] = useState([])\n  const [posts, setPosts] = useState([])\n  const [totalPages, setTotalPages] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  const location = useLocation()\n  const urlSearchParams = new URLSearchParams(location.search)\n  const currentTopic = urlSearchParams.get('topic')\n\n  useEffect(() => {\n    getTopics(setTopics)\n  },[])\n\n  useEffect(() => {\n    getPostsAmount(currentTopic, 5, setTotalPages)\n    getSeedPosts(currentTopic, 5, setPosts)\n    setCurrentPage(1)\n  },[currentTopic])\n\n  function nextPage(){\n    if(currentPage === totalPages) return\n    const lastRefPlace = 5 * (currentPage)\n    getChangePagePosts(currentTopic, 5, setPosts, lastRefPlace)\n    setCurrentPage((currentPage+1))\n  }\n  function prevPage(){\n    if(currentPage === 1) return\n    const lastRefPlace = 5 * (currentPage-2)\n    getChangePagePosts(currentTopic, 5, setPosts, lastRefPlace)\n    setCurrentPage((currentPage-1))\n  }\n\n  return (\n    <BlogPageContainer>\n      <TopicsContainer>\n        <Title>分類</Title>\n        <TopicsWrap>\n        <Topic\n         to='/blog'\n         active={!currentTopic}\n        >全部文章</Topic>\n        {topics.map(topic => {\n          return <Topic\n                    key={topic.id}\n                    to={`/blog?topic=${topic.name}`}\n                    active={currentTopic === topic.name}\n                  >\n                    {topic.name}\n                  </Topic>\n        })}\n        </TopicsWrap>\n      </TopicsContainer>\n      <PostsContainer>\n        {posts.map((post) => {\n          return <PostLink key={post.id} to={`/blogpost/${post.id}`}>\n                    <Post key={post.id}\n                          createdAt={post.createdAt.toDate().toLocaleString([],{year: 'numeric', month: 'numeric', day: 'numeric'})}\n                          imageUrl={post.imageUrl} topic={post.topic}\n                          title={post.title}\n                    />\n                </PostLink>\n        })}\n      <PaginatorContainer>\n        {(totalPages > 1 && currentPage !== 1 ) && <PageBtn onClick={prevPage}>＜</PageBtn>}\n        {(totalPages > 1 && currentPage !== totalPages ) && <PageBtn onClick={nextPage}>＞</PageBtn>}\n      </PaginatorContainer>\n      </PostsContainer>\n    </BlogPageContainer>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}