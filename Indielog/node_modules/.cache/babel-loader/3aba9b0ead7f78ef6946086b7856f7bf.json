{"ast":null,"code":"var _jsxFileName = \"/Users/fanyukun/Documents/react/indielog/src/components/MusicPlayerSmall/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Container, ImgDiv, InfoContainer, SongName, AuthorName, IconContainer, FontAwesome, Track, AnimateTrack, InputRange } from './MusicPlayerSmallElements.js';\nimport { faSlidersH, faPlay, faPause } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSongPlayingInfo } from \"../../redux/reducers/playerControlReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MusicPlayerSmall = ({\n  audioRef\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isPlaying = useSelector(store => store.playerControl.isPlaying);\n  const songPlayingInfo = useSelector(store => store.playerControl.songPlayingInfo);\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    dispatch(setSongPlayingInfo({ ...songPlayingInfo,\n      currentTime: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Track, {\n        children: [/*#__PURE__*/_jsxDEV(InputRange, {\n          min: 0,\n          max: songPlayingInfo.duration,\n          value: songPlayingInfo.currentTime,\n          onChange: dragHandler,\n          type: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnimateTrack, {\n          animationPercentage: songPlayingInfo.animationPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgDiv, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: 'https://i.imgur.com/Ti5yQhBh.jpg'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SongName, {\n          children: \"\\u7518\\u8517\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthorName, {\n          children: \"\\u591C\\u8C93\\u7D44\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesome, {\n          size: \"1x\",\n          icon: isPlaying ? faPause : faPlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesome, {\n          size: \"1x\",\n          icon: faSlidersH\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MusicPlayerSmall, \"5WcIn4o0ON8CsDH3Gf0L8Tf3HUg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MusicPlayerSmall;\nexport default MusicPlayerSmall;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicPlayerSmall\");","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/components/MusicPlayerSmall/index.js"],"names":["useState","Container","ImgDiv","InfoContainer","SongName","AuthorName","IconContainer","FontAwesome","Track","AnimateTrack","InputRange","faSlidersH","faPlay","faPause","useDispatch","useSelector","setSongPlayingInfo","MusicPlayerSmall","audioRef","dispatch","isPlaying","store","playerControl","songPlayingInfo","dragHandler","e","current","currentTime","target","value","duration","animationPercentage"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,aANF,EAOEC,WAPF,EAQEC,KARF,EASEC,YATF,EAUEC,UAVF,QAWQ,+BAXR;AAYA,SACEC,UADF,EAEEC,MAFF,EAGEC,OAHF,QAIO,mCAJP;AAKA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,2CAAnC;;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACzC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBF,SAAhC,CAA7B;AACA,QAAMG,eAAe,GAAGR,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,eAAhC,CAAnC;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBP,IAAAA,QAAQ,CAACQ,OAAT,CAAiBC,WAAjB,GAA+BF,CAAC,CAACG,MAAF,CAASC,KAAxC;AACAV,IAAAA,QAAQ,CAACH,kBAAkB,CAAC,EAAC,GAAGO,eAAJ;AAAqBI,MAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASC;AAA3C,KAAD,CAAnB,CAAR;AACD,GAHD;;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,KAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,GAAG,EAAE,CADP;AAEE,UAAA,GAAG,EAAEN,eAAe,CAACO,QAFvB;AAGE,UAAA,KAAK,EAAEP,eAAe,CAACI,WAHzB;AAIE,UAAA,QAAQ,EAAEH,WAJZ;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,YAAD;AAAc,UAAA,mBAAmB,EAAED,eAAe,CAACQ;AAAnD;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AAAA,+BACE;AAAK,UAAA,GAAG,EAAE;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE,QAAC,aAAD;AAAA,gCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAkBE,QAAC,aAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,IAAlB;AAAuB,UAAA,IAAI,EAAEX,SAAS,GAAGP,OAAH,GAAaD;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,IAAlB;AAAuB,UAAA,IAAI,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD,CAnCD;;GAAMM,gB;UACaH,W,EACCC,W,EACMA,W;;;KAHpBE,gB;AAqCN,eAAeA,gBAAf","sourcesContent":["import { useState } from 'react'\nimport {\n  Container,\n  ImgDiv,\n  InfoContainer,\n  SongName,\n  AuthorName,\n  IconContainer,\n  FontAwesome,\n  Track,\n  AnimateTrack,\n  InputRange\n } from './MusicPlayerSmallElements.js'\nimport {\n  faSlidersH,\n  faPlay,\n  faPause\n} from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSongPlayingInfo } from \"../../redux/reducers/playerControlReducer\"\n\nconst MusicPlayerSmall = ({ audioRef }) => {\n  const dispatch = useDispatch()\n  const isPlaying = useSelector((store) => store.playerControl.isPlaying)\n  const songPlayingInfo = useSelector((store) => store.playerControl.songPlayingInfo)\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value\n    dispatch(setSongPlayingInfo({...songPlayingInfo, currentTime: e.target.value}))\n  }\n  return (\n    <>\n      <Container>\n        <Track>\n          <InputRange\n            min={0}\n            max={songPlayingInfo.duration}\n            value={songPlayingInfo.currentTime}\n            onChange={dragHandler}\n            type=\"range\"\n          />\n          <AnimateTrack animationPercentage={songPlayingInfo.animationPercentage}/>\n        </Track>\n        <ImgDiv>\n          <img src={'https://i.imgur.com/Ti5yQhBh.jpg'}/>\n        </ImgDiv>\n        <InfoContainer>\n          <SongName>甘蔗</SongName>\n          <AuthorName>夜貓組</AuthorName>\n        </InfoContainer>\n        <IconContainer>\n          <FontAwesome size=\"1x\" icon={isPlaying ? faPause : faPlay}/>\n          <FontAwesome size=\"1x\" icon={faSlidersH}/>\n        </IconContainer>\n      </Container>\n    </>\n  )\n}\n\nexport default MusicPlayerSmall\n"]},"metadata":{},"sourceType":"module"}