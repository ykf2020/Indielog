{"ast":null,"code":"var _jsxFileName = \"/Users/fanyukun/Documents/react/indielog/src/components/MusicPlayerFull/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useMemo, useRef, useEffect } from 'react';\nimport { Container, Nav, NavLogo, BodyContainer, Library, Song, SongInfo, ControlPanel, FontAwesome, SongName, AuthorName, ImgDiv, Slider, Buttons, Track, AnimateTrack, InputRange, SongCurrentTime, SongFullTime, FontAwesomeControl, ToggleButton, ButtonGroup, LibrarySongDiv, LibrarySongDesc, LibrarySongName, LibrarySongAuthorName, LibraryImgDiv, LoopButton, VolumeDiv, VolumeButtonDiv, VolumeInputRange, VolumeTrack, VolumeAnimateTrack, InnerButoons, MainFontAwesomeControl } from './MusicPlayerFullElements.js';\nimport { faPause, faPlay, faTimes, faVolumeUp, faChevronRight, faChevronLeft, faUndo, faToggleOff, faToggleOn, faCompressAlt, faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentSong } from \"../../redux/reducers/songReducer\";\nimport { setSound, setIsPlaying, setMode, setSongPlayingInfo, setLoop } from \"../../redux/reducers/playerControlReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MusicPlayerFull = ({\n  audioRef\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const volumeBarRef = useRef(null);\n  const [volumeBarIsShown, setVolumeBarIsShown] = useState(false);\n  const mode = useSelector(store => store.playerControl.mode);\n  const isPlaying = useSelector(store => store.playerControl.isPlaying);\n  const songs = useSelector(store => store.song.songs);\n  const currentSong = useSelector(store => store.song.currentSong);\n  const songPlayingInfo = useSelector(store => store.playerControl.songPlayingInfo);\n  const sound = useSelector(store => store.playerControl.sound);\n  const loop = useSelector(store => store.playerControl.loop);\n  const bgImg = useMemo(() => {\n    return currentSong.cover;\n  }, [currentSong]);\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  function playSongHandler() {\n    dispatch(setIsPlaying(!isPlaying));\n  }\n\n  function dragHandler(e) {\n    audioRef.current.currentTime = e.target.value;\n    dispatch(setSongPlayingInfo({ ...songPlayingInfo,\n      currentTime: e.target.value\n    }));\n  }\n\n  async function skipTrackHandler(direction) {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === 'skip-forward') {\n      await dispatch(setCurrentSong(songs[(currentIndex + 1) % songs.length]));\n    }\n\n    if (direction === 'skip-back') {\n      if (songPlayingInfo.currentTime > 10) {\n        await dispatch(setSongPlayingInfo({ ...songPlayingInfo,\n          currentTime: 0\n        }));\n        return;\n      }\n\n      if ((currentIndex - 1) % songs.length === -1) {\n        dispatch(setCurrentSong(songs[songs.length - 1]));\n        return;\n      }\n\n      dispatch(setCurrentSong(songs[(currentIndex - 1) % songs.length]));\n    }\n  }\n\n  function volumeHandler(e) {\n    if (e.target.value == 0) {\n      dispatch(setSound({ ...sound,\n        mute: true,\n        volume: e.target.value\n      }));\n    } else {\n      dispatch(setSound({ ...sound,\n        mute: false,\n        volume: e.target.value,\n        prevVolume: e.target.value\n      }));\n    }\n\n    audioRef.current.volume = e.target.value;\n  }\n\n  async function songSelectHandler(song) {\n    dispatch(setCurrentSong(song));\n  }\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (volumeBarRef.current && !volumeBarRef.current.contains(event.target)) {\n        setVolumeBarIsShown(false);\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [volumeBarRef]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      bgImg: bgImg,\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n          to: \"/\",\n          children: \"Indielog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesome, {\n            onClick: () => dispatch(setMode(1)),\n            size: \"2x\",\n            icon: faCompressAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesome, {\n            onClick: () => dispatch(setMode(0)),\n            size: \"2x\",\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          size: \"2x\",\n          icon: mode === 3 ? faToggleOn : faToggleOff,\n          onClick: () => dispatch(setMode(mode === 3 ? 2 : 3))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BodyContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Library, {\n          mode: mode,\n          children: songs.map(song => {\n            return /*#__PURE__*/_jsxDEV(LibrarySongDiv, {\n              onClick: () => songSelectHandler(song),\n              active: song.id === currentSong.id,\n              children: [/*#__PURE__*/_jsxDEV(LibraryImgDiv, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: song.cover\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LibrarySongDesc, {\n                children: [/*#__PURE__*/_jsxDEV(LibrarySongName, {\n                  children: song.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(LibrarySongAuthorName, {\n                  children: song.artist\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Song, {\n          mode: mode,\n          children: [/*#__PURE__*/_jsxDEV(SongInfo, {\n            children: [/*#__PURE__*/_jsxDEV(ImgDiv, {\n              mode: mode,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: currentSong.cover\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SongName, {\n              children: currentSong.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AuthorName, {\n              children: currentSong.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n            children: [/*#__PURE__*/_jsxDEV(Slider, {\n              children: [/*#__PURE__*/_jsxDEV(SongCurrentTime, {\n                children: getTime(songPlayingInfo.currentTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Track, {\n                children: [/*#__PURE__*/_jsxDEV(InputRange, {\n                  min: 0,\n                  min: 0,\n                  max: songPlayingInfo.duration,\n                  value: songPlayingInfo.currentTime,\n                  onChange: dragHandler,\n                  type: \"range\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AnimateTrack, {\n                  animationPercentage: songPlayingInfo.animationPercentage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SongFullTime, {\n                children: getTime(songPlayingInfo.duration || 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n              children: [/*#__PURE__*/_jsxDEV(LoopButton, {\n                onClick: () => dispatch(setLoop(!loop)),\n                active: loop,\n                size: \"1x\",\n                icon: faUndo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InnerButoons, {\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeControl, {\n                  onClick: () => {\n                    skipTrackHandler('skip-back');\n                  },\n                  size: \"1x\",\n                  icon: faChevronLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MainFontAwesomeControl, {\n                  onClick: playSongHandler,\n                  size: \"2x\",\n                  icon: isPlaying ? faPause : faPlay\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FontAwesomeControl, {\n                  onClick: () => {\n                    skipTrackHandler('skip-forward');\n                  },\n                  size: \"1x\",\n                  icon: faChevronRight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(VolumeButtonDiv, {\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeControl, {\n                  size: \"1x\",\n                  icon: sound.mute ? faVolumeMute : faVolumeUp,\n                  onClick: () => setVolumeBarIsShown(!volumeBarIsShown)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this), volumeBarIsShown && /*#__PURE__*/_jsxDEV(VolumeDiv, {\n                  ref: volumeBarRef,\n                  children: /*#__PURE__*/_jsxDEV(VolumeTrack, {\n                    children: [/*#__PURE__*/_jsxDEV(VolumeInputRange, {\n                      min: 0,\n                      step: 0.01,\n                      max: 1,\n                      value: sound.volume,\n                      onChange: volumeHandler,\n                      type: \"range\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(VolumeAnimateTrack, {\n                      volume: sound.volume\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MusicPlayerFull, \"LR8fmjbD3q2OCPfxM+EfMe11T2E=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = MusicPlayerFull;\nexport default MusicPlayerFull;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicPlayerFull\");","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/components/MusicPlayerFull/index.js"],"names":["useState","useMemo","useRef","useEffect","Container","Nav","NavLogo","BodyContainer","Library","Song","SongInfo","ControlPanel","FontAwesome","SongName","AuthorName","ImgDiv","Slider","Buttons","Track","AnimateTrack","InputRange","SongCurrentTime","SongFullTime","FontAwesomeControl","ToggleButton","ButtonGroup","LibrarySongDiv","LibrarySongDesc","LibrarySongName","LibrarySongAuthorName","LibraryImgDiv","LoopButton","VolumeDiv","VolumeButtonDiv","VolumeInputRange","VolumeTrack","VolumeAnimateTrack","InnerButoons","MainFontAwesomeControl","faPause","faPlay","faTimes","faVolumeUp","faChevronRight","faChevronLeft","faUndo","faToggleOff","faToggleOn","faCompressAlt","faVolumeMute","useDispatch","useSelector","setCurrentSong","setSound","setIsPlaying","setMode","setSongPlayingInfo","setLoop","MusicPlayerFull","audioRef","dispatch","volumeBarRef","volumeBarIsShown","setVolumeBarIsShown","mode","store","playerControl","isPlaying","songs","song","currentSong","songPlayingInfo","sound","loop","bgImg","cover","getTime","time","Math","floor","slice","playSongHandler","dragHandler","e","current","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","id","length","volumeHandler","mute","volume","prevVolume","songSelectHandler","handleClickOutside","event","contains","document","addEventListener","removeEventListener","map","name","artist","duration","animationPercentage"],"mappings":"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","sourcesContent":["import { useState, useMemo, useRef, useEffect } from 'react'\nimport {\n  Container,\n  Nav,\n  NavLogo,\n  BodyContainer,\n  Library,\n  Song,\n  SongInfo,\n  ControlPanel,\n  FontAwesome,\n  SongName,\n  AuthorName,\n  ImgDiv,\n  Slider,\n  Buttons,\n  Track,\n  AnimateTrack,\n  InputRange,\n  SongCurrentTime,\n  SongFullTime,\n  FontAwesomeControl,\n  ToggleButton,\n  ButtonGroup,\n  LibrarySongDiv,\n  LibrarySongDesc,\n  LibrarySongName,\n  LibrarySongAuthorName,\n  LibraryImgDiv,\n  LoopButton,\n  VolumeDiv,\n  VolumeButtonDiv,\n  VolumeInputRange,\n  VolumeTrack,\n  VolumeAnimateTrack,\n  InnerButoons,\n  MainFontAwesomeControl\n} from './MusicPlayerFullElements.js'\nimport {\n  faPause,\n  faPlay,\n  faTimes,\n  faVolumeUp,\n  faChevronRight,\n  faChevronLeft,\n  faUndo,\n  faToggleOff,\n  faToggleOn,\n  faCompressAlt,\n  faVolumeMute\n} from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentSong } from \"../../redux/reducers/songReducer\";\nimport { setSound, setIsPlaying, setMode, setSongPlayingInfo, setLoop } from \"../../redux/reducers/playerControlReducer\"\n\n\nconst MusicPlayerFull = ({ audioRef }) => {\n  const dispatch = useDispatch()\n  const volumeBarRef = useRef(null)\n  const [volumeBarIsShown, setVolumeBarIsShown] = useState(false)\n  const mode = useSelector((store) => store.playerControl.mode)\n  const isPlaying = useSelector((store) => store.playerControl.isPlaying)\n  const songs = useSelector((store) => store.song.songs)\n  const currentSong = useSelector((store) => store.song.currentSong)\n  const songPlayingInfo = useSelector((store) => store.playerControl.songPlayingInfo)\n  const sound = useSelector((store) => store.playerControl.sound)\n  const loop = useSelector((store) => store.playerControl.loop)\n\n  const bgImg = useMemo(() => {\n    return currentSong.cover\n  }, [currentSong])\n\n  const getTime = (time) => {\n    return(\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    )\n  }\n\n  function playSongHandler(){\n    dispatch(setIsPlaying(!isPlaying))\n  }\n\n  function dragHandler(e){\n    audioRef.current.currentTime = e.target.value\n    dispatch(setSongPlayingInfo({...songPlayingInfo, currentTime: e.target.value}))\n  }\n\n  async function skipTrackHandler(direction){\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n    if(direction === 'skip-forward') {\n      await dispatch(setCurrentSong(songs[(currentIndex + 1) % songs.length]))\n    }\n    if(direction === 'skip-back'){\n      if(songPlayingInfo.currentTime > 10) {\n        await dispatch(setSongPlayingInfo({...songPlayingInfo, currentTime: 0}))\n        return\n      }\n      if((currentIndex - 1) % songs.length === -1){\n        dispatch(setCurrentSong(songs[songs.length-1]))\n        return\n      }\n        dispatch(setCurrentSong(songs[(currentIndex - 1) % songs.length]))\n    }\n  }\n\n  function volumeHandler(e){\n    if(e.target.value == 0) {\n      dispatch(setSound({ ...sound, mute:true, volume: e.target.value}))\n    } else {\n      dispatch(setSound({ ...sound, mute:false, volume: e.target.value, prevVolume: e.target.value}))\n    }\n    audioRef.current.volume = e.target.value\n  }\n\n  async function songSelectHandler(song){\n      dispatch(setCurrentSong(song))\n  }\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (volumeBarRef.current && !volumeBarRef.current.contains(event.target)) {\n        setVolumeBarIsShown(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [volumeBarRef]);\n\n  return (\n    <>\n      <Container bgImg={bgImg}>\n        <Nav>\n          <NavLogo to='/'>Indielog</NavLogo>\n          <ButtonGroup>\n            <FontAwesome onClick={() => dispatch(setMode(1))} size='2x' icon={faCompressAlt}/>\n            <FontAwesome onClick={() => dispatch(setMode(0))} size='2x' icon={faTimes} />\n          </ButtonGroup>\n          <ToggleButton size='2x' icon={(mode===3) ? faToggleOn : faToggleOff } onClick={() => dispatch(setMode((mode === 3) ? 2 : 3))}/>\n        </Nav>\n        <BodyContainer>\n          <Library mode={mode}>\n            {songs.map(song => {\n              return (\n                <LibrarySongDiv onClick={() => songSelectHandler(song)} active={song.id === currentSong.id}>\n                  <LibraryImgDiv>\n                    <img src={song.cover}/>\n                  </LibraryImgDiv>\n                  <LibrarySongDesc>\n                    <LibrarySongName>{song.name}</LibrarySongName>\n                    <LibrarySongAuthorName>{song.artist}</LibrarySongAuthorName>\n                  </LibrarySongDesc>\n                </LibrarySongDiv>\n              )\n            })}\n          </Library>\n          <Song mode={mode}>\n            <SongInfo>\n              <ImgDiv mode={mode}><img src={currentSong.cover}/></ImgDiv>\n              <SongName>{currentSong.name}</SongName>\n              <AuthorName>{currentSong.artist}</AuthorName>\n            </SongInfo>\n            <ControlPanel>\n              <Slider>\n                <SongCurrentTime>{getTime(songPlayingInfo.currentTime)}</SongCurrentTime>\n                <Track>\n                  <InputRange min={0}\n                    min={0}\n                    max={songPlayingInfo.duration}\n                    value={songPlayingInfo.currentTime}\n                    onChange={dragHandler}\n                    type=\"range\"\n                  />\n                  <AnimateTrack animationPercentage={songPlayingInfo.animationPercentage} />\n                </Track>\n                <SongFullTime>{getTime(songPlayingInfo.duration || 0)}</SongFullTime>\n              </Slider>\n              <Buttons>\n                <LoopButton onClick={() => dispatch(setLoop(!loop)) } active={loop} size='1x' icon={faUndo} />\n                <InnerButoons>\n                  <FontAwesomeControl onClick={() => {skipTrackHandler('skip-back')}} size='1x' icon={faChevronLeft} />\n                  <MainFontAwesomeControl onClick={playSongHandler} size='2x' icon={isPlaying ? faPause : faPlay} />\n                  <FontAwesomeControl onClick={() => {skipTrackHandler('skip-forward')}} size='1x' icon={faChevronRight} />\n                </InnerButoons>\n                <VolumeButtonDiv>\n                  <FontAwesomeControl size='1x' icon={sound.mute ? faVolumeMute : faVolumeUp} onClick={() => setVolumeBarIsShown(!volumeBarIsShown)}/>\n                  {volumeBarIsShown && (\n                    <VolumeDiv ref={volumeBarRef}>\n                      <VolumeTrack>\n                        <VolumeInputRange\n                          min={0}\n                          step={0.01}\n                          max={1}\n                          value={sound.volume}\n                          onChange={volumeHandler}\n                          type=\"range\"\n                        />\n                        <VolumeAnimateTrack volume={sound.volume} />\n                      </VolumeTrack>\n                    </VolumeDiv>\n                  )}\n                </VolumeButtonDiv>\n              </Buttons>\n            </ControlPanel>\n          </Song>\n        </BodyContainer>\n      </Container>\n    </>\n  )\n}\n\nexport default MusicPlayerFull\n"]},"metadata":{},"sourceType":"module"}