{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoadingPost: false,\n  post: {},\n  newPostResponse: null,\n  editPostResponse: null\n};\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  setIsLoadingPost,\n  setPost,\n  setNewPostResponse\n} = postReducer.actions;\nexport default postReducer.reducer;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/redux/reducers/postReducer.js"],"names":["createSlice","initialState","isLoadingPost","post","newPostResponse","editPostResponse","postReducer","name","reducers","setIsLoadingPost","state","action","payload","setPost","setNewPostResponse","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAInBC,EAAAA,eAAe,EAAE,IAJE;AAKnBC,EAAAA,gBAAgB,EAAE;AALC,CAArB;AAQA,OAAO,MAAMC,WAAW,GAAGN,WAAW,CAAC;AACrCO,EAAAA,IAAI,EAAE,OAD+B;AAErCN,EAAAA,YAFqC;AAGrCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnCD,MAAAA,KAAK,CAACR,aAAN,GAAsBS,MAAM,CAACC,OAA7B;AACD,KAHO;AAIRC,IAAAA,OAAO,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACC,OAApB;AACD,KANO;AAORE,IAAAA,kBAAkB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACN,eAAN,GAAwBO,MAAM,CAACC,OAA/B;AACD;AATO;AAH2B,CAAD,CAA/B,C,CAgBP;;AACA,OAAO,MAAM;AAAEH,EAAAA,gBAAF;AAAoBI,EAAAA,OAApB;AAA6BC,EAAAA;AAA7B,IACXR,WAAW,CAACS,OADP;AAIP,eAAeT,WAAW,CAACU,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoadingPost: false,\n  post: {},\n\n  newPostResponse: null,\n  editPostResponse: null,\n};\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setIsLoadingPost, setPost, setNewPostResponse } =\n  postReducer.actions;\n\n\nexport default postReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}