{"ast":null,"code":"var _jsxFileName = \"/Users/fanyukun/Documents/react/indielog/src/components/Comment/index.js\",\n    _s = $RefreshSig$();\n\nimport { Comment as CommentDiv, CommentInfo, CommentorImgDiv, CommentorName, CommentorDate, CommentContent, CommentButtons } from './CommentElement.js';\nimport { useState, useEffect } from 'react';\nimport firebase from '../../utils/firebase.js';\nimport \"firebase/compat/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = ({\n  currentComment\n}) => {\n  _s();\n\n  var _comment$author, _comment$author2, _comment$author3, _comment$createdAt;\n\n  const [comment, setComment] = useState(currentComment);\n  useEffect(() => {\n    firebase.firestore().collection('users').doc(currentComment.authorUid).get().then(authorSnapShot => {\n      setComment(prevState => {\n        return { ...prevState,\n          author: authorSnapShot.data()\n        };\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CommentDiv, {\n    children: [/*#__PURE__*/_jsxDEV(CommentInfo, {\n      children: [/*#__PURE__*/_jsxDEV(CommentorImgDiv, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ((_comment$author = comment.author) === null || _comment$author === void 0 ? void 0 : _comment$author.photoURL) ? (_comment$author2 = comment.author) === null || _comment$author2 === void 0 ? void 0 : _comment$author2.photoURL : 'https://assets.juksy.com/files/articles/108444/800x_100_w-60934d08db2e1.jpg'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentorName, {\n        children: (_comment$author3 = comment.author) === null || _comment$author3 === void 0 ? void 0 : _comment$author3.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentorDate, {\n        children: (_comment$createdAt = comment.createdAt) === null || _comment$createdAt === void 0 ? void 0 : _comment$createdAt.toDate().toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n      children: comment.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentButtons, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uFF081\\uFF09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uFF082\\uFF09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uFF083\\uFF09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"0sshghW9EglnI4IZ98FUD6AvWao=\");\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/components/Comment/index.js"],"names":["Comment","CommentDiv","CommentInfo","CommentorImgDiv","CommentorName","CommentorDate","CommentContent","CommentButtons","useState","useEffect","firebase","currentComment","comment","setComment","firestore","collection","doc","authorUid","get","then","authorSnapShot","prevState","author","data","photoURL","displayName","createdAt","toDate","toLocaleString","content"],"mappings":";;;AAAA,SAASA,OAAO,IAAIC,UAApB,EAAgCC,WAAhC,EAA6CC,eAA7C,EAA8DC,aAA9D,EAA6EC,aAA7E,EAA4FC,cAA5F,EAA4GC,cAA5G,QAAkI,qBAAlI;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAO,2BAAP;;;AAEA,MAAMV,OAAO,GAAG,CAAC;AAAEW,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACG,cAAD,CAAtC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,CACLI,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGC,GAHH,CAGOL,cAAc,CAACM,SAHtB,EAIGC,GAJH,GAKGC,IALH,CAKSC,cAAD,IAAoB;AACxBP,MAAAA,UAAU,CAACQ,SAAS,IAAI;AACtB,eAAO,EAAE,GAAGA,SAAL;AAAgBC,UAAAA,MAAM,EAAEF,cAAc,CAACG,IAAf;AAAxB,SAAP;AACD,OAFS,CAAV;AAGD,KATH;AAUD,GAXQ,EAWP,EAXO,CAAT;AAYA,sBACE,QAAC,UAAD;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,eAAD;AAAA,+BAAiB;AAAK,UAAA,GAAG,EAAE,oBAAAX,OAAO,CAACU,MAAR,oEAAgBE,QAAhB,wBAA2BZ,OAAO,CAACU,MAAnC,qDAA2B,iBAAgBE,QAA3C,GAAsD;AAAhE;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,sCAAgBZ,OAAO,CAACU,MAAxB,qDAAgB,iBAAgBG;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,aAAD;AAAA,wCAAgBb,OAAO,CAACc,SAAxB,uDAAgB,mBAAmBC,MAAnB,GAA4BC,cAA5B;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,cAAD;AAAA,gBACGhB,OAAO,CAACiB;AADX;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,cAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/BD;;GAAM7B,O;;KAAAA,O;AAiCN,eAAeA,OAAf","sourcesContent":["import { Comment as CommentDiv, CommentInfo, CommentorImgDiv, CommentorName, CommentorDate, CommentContent, CommentButtons } from './CommentElement.js'\nimport { useState, useEffect } from 'react'\nimport firebase from '../../utils/firebase.js'\nimport \"firebase/compat/firestore\"\n\nconst Comment = ({ currentComment }) => {\n  const [comment, setComment] = useState(currentComment)\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection('users')\n      .doc(currentComment.authorUid)\n      .get()\n      .then((authorSnapShot) => {\n        setComment(prevState => {\n          return { ...prevState, author: authorSnapShot.data() }\n        })\n      })\n  },[])\n  return (\n    <CommentDiv>\n      <CommentInfo>\n        <CommentorImgDiv><img src={comment.author?.photoURL ? comment.author?.photoURL : 'https://assets.juksy.com/files/articles/108444/800x_100_w-60934d08db2e1.jpg'}/></CommentorImgDiv>\n        <CommentorName>{comment.author?.displayName}</CommentorName>\n        <CommentorDate>{comment.createdAt?.toDate().toLocaleString()}</CommentorDate>\n      </CommentInfo>\n      <CommentContent>\n        {comment.content}\n      </CommentContent>\n      <CommentButtons>\n        <p>（1）</p>\n        <p>（2）</p>\n        <p>（3）</p>\n      </CommentButtons>\n    </CommentDiv>\n  )\n}\n\nexport default Comment\n"]},"metadata":{},"sourceType":"module"}