{"ast":null,"code":"var _jsxFileName = \"/Users/fanyukun/Documents/react/indielog/src/pages/Music/index.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faPlayCircle, faHeart as faHeartBorder } from '@fortawesome/free-regular-svg-icons';\nimport { setCurrentSong } from \"../../redux/reducers/songReducer\";\nimport { setMode, setMainGetIn } from \"../../redux/reducers/playerControlReducer\";\nimport { gray1, gray2, gray3, gray4 } from '../../constants.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items:center;\n  width:100%;\n  padding-top: 100px;\n  positon: relative;\n  z-index:1;\n  /* border: 1px solid blue; */\n`;\n_c = Container;\nconst CarouSelll = styled.div`\n`;\n_c2 = CarouSelll;\nconst SongsList = styled.section`\n  /* border: 1px solid pink; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 70%;\n  padding: 0 30px;\n`;\n_c3 = SongsList;\nconst Song = styled.div`\n  /* border: 1px solid yellow; */\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 120px;\n  border-bottom: 1px solid ${gray2};\n  padding: 0 20px;\n\n  &:hover {\n    background: white;\n  }\n\n\n`;\n_c4 = Song;\nconst SongInfo = styled.div`\n  width: 86%;\n  height: 100%;\n  /* border: 1px solid orange; */\n  display: flex;\n  align-items: center;\n`;\n_c5 = SongInfo;\nconst SongName = styled.h3`\n  font-size: 1.2rem;\n  font-weight: bold;\n`;\n_c6 = SongName;\nconst AuthorName = styled.p`\n  font-size: 0.8rem;\n  color: ${gray3}\n`;\n_c7 = AuthorName;\nconst SongButtons = styled.div`\n  width: 14%;\n  height: 100%;\n  /* border: 1px solid orange; */\n  display: flex;\n  justify-content: end;\n  align-items: center;\n`;\n_c8 = SongButtons;\nconst NumberDiv = styled.div`\n  width: 60px;\n  /* border: 1px solid blue; */\n`;\n_c9 = NumberDiv;\nconst ImgDiv = styled.div`\n  height: 80px;\n  width: 80px;\n  /* border: 1px solid black; */\n  border-radius: 12px;\n  overflow: hidden;\n  position: relative;\n  cursor:pointer;\n  z-index:1;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    position: relative;\n    z-index: 2;\n  }\n`;\n_c10 = ImgDiv;\nconst SongDesc = styled.div`\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 20px;\n`;\n_c11 = SongDesc;\n\nconst Music = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const songs = useSelector(store => store.song.songs);\n\n  const playSong = async song => {\n    await dispatch(setCurrentSong(song));\n    await dispatch(setMode(2));\n    await dispatch(setMainGetIn(true));\n    await dispatch(setMainGetIn(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CarouSelll, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SongsList, {\n      children: songs.map((song, index) => {\n        return /*#__PURE__*/_jsxDEV(Song, {\n          children: [/*#__PURE__*/_jsxDEV(SongInfo, {\n            children: [/*#__PURE__*/_jsxDEV(NumberDiv, {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ImgDiv, {\n              onClick: () => playSong(song),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: song.cover\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SongDesc, {\n              children: [/*#__PURE__*/_jsxDEV(SongName, {\n                children: song === null || song === void 0 ? void 0 : song.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AuthorName, {\n                children: song === null || song === void 0 ? void 0 : song.artist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SongButtons, {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              size: \"1x\",\n              icon: faHeartBorder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Music, \"DKrO70wI+fLb2pnZSPZaIrXIDXA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c12 = Music;\nexport default Music;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CarouSelll\");\n$RefreshReg$(_c3, \"SongsList\");\n$RefreshReg$(_c4, \"Song\");\n$RefreshReg$(_c5, \"SongInfo\");\n$RefreshReg$(_c6, \"SongName\");\n$RefreshReg$(_c7, \"AuthorName\");\n$RefreshReg$(_c8, \"SongButtons\");\n$RefreshReg$(_c9, \"NumberDiv\");\n$RefreshReg$(_c10, \"ImgDiv\");\n$RefreshReg$(_c11, \"SongDesc\");\n$RefreshReg$(_c12, \"Music\");","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/pages/Music/index.js"],"names":["styled","useSelector","useDispatch","FontAwesomeIcon","faHeart","faPlayCircle","faHeartBorder","setCurrentSong","setMode","setMainGetIn","gray1","gray2","gray3","gray4","Container","div","CarouSelll","SongsList","section","Song","SongInfo","SongName","h3","AuthorName","p","SongButtons","NumberDiv","ImgDiv","SongDesc","Music","dispatch","songs","store","song","playSong","map","index","cover","name","artist"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { faPlayCircle, faHeart as faHeartBorder } from '@fortawesome/free-regular-svg-icons'\nimport { setCurrentSong } from \"../../redux/reducers/songReducer\";\nimport { setMode, setMainGetIn } from \"../../redux/reducers/playerControlReducer\"\nimport { gray1, gray2, gray3, gray4 } from '../../constants.js'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items:center;\n  width:100%;\n  padding-top: 100px;\n  positon: relative;\n  z-index:1;\n  /* border: 1px solid blue; */\n`\nconst CarouSelll = styled.div`\n`\n\nconst SongsList = styled.section`\n  /* border: 1px solid pink; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 70%;\n  padding: 0 30px;\n`\n\nconst Song = styled.div`\n  /* border: 1px solid yellow; */\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 120px;\n  border-bottom: 1px solid ${gray2};\n  padding: 0 20px;\n\n  &:hover {\n    background: white;\n  }\n\n\n`\n\nconst SongInfo = styled.div`\n  width: 86%;\n  height: 100%;\n  /* border: 1px solid orange; */\n  display: flex;\n  align-items: center;\n`\n\nconst SongName = styled.h3`\n  font-size: 1.2rem;\n  font-weight: bold;\n`\n\nconst AuthorName = styled.p`\n  font-size: 0.8rem;\n  color: ${gray3}\n`\n\nconst SongButtons = styled.div`\n  width: 14%;\n  height: 100%;\n  /* border: 1px solid orange; */\n  display: flex;\n  justify-content: end;\n  align-items: center;\n`\n\nconst NumberDiv = styled.div`\n  width: 60px;\n  /* border: 1px solid blue; */\n`\n\nconst ImgDiv = styled.div`\n  height: 80px;\n  width: 80px;\n  /* border: 1px solid black; */\n  border-radius: 12px;\n  overflow: hidden;\n  position: relative;\n  cursor:pointer;\n  z-index:1;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    position: relative;\n    z-index: 2;\n  }\n`\n\n\nconst SongDesc = styled.div`\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 20px;\n`\n\nconst Music = () => {\n  const dispatch = useDispatch()\n  const songs = useSelector((store) => store.song.songs)\n  const playSong = async (song) => {\n    await dispatch(setCurrentSong(song))\n    await dispatch(setMode(2))\n    await dispatch(setMainGetIn(true))\n    await dispatch(setMainGetIn(false))\n  }\n  return (\n    <Container >\n      <CarouSelll>\n      </CarouSelll>\n      <SongsList>\n        {songs.map((song,index) => {\n          return (\n            <Song>\n              <SongInfo>\n                <NumberDiv>\n                  <h1>{index + 1}</h1>\n                </NumberDiv>\n                <ImgDiv onClick={() => playSong(song)}>\n                  <img src={song.cover}/>\n                </ImgDiv>\n                <SongDesc>\n                  <SongName>{song?.name}</SongName>\n                  <AuthorName>{song?.artist}</AuthorName>\n                </SongDesc>\n              </SongInfo>\n              <SongButtons>\n                <FontAwesomeIcon size='1x' icon={faHeartBorder}/>\n              </SongButtons>\n            </Song>\n          )\n        })}\n      </SongsList>\n    </Container>\n  )\n}\n\nexport default Music\n"]},"metadata":{},"sourceType":"module"}