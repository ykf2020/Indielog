{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isPlaying: false,\n  libraryStatus: false,\n  sound: {\n    mute: false,\n    volume: 0.5,\n    prevVolume: 0.5\n  },\n  songPlayingInfo: {\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0\n  }\n};\nexport const playerControlReducer = createSlice({\n  name: \"playerControl\",\n  initialState,\n  reducers: {\n    setIsPlaying: (state, action) => {\n      state.isPlaying = action.payload;\n    },\n    setLibraryStatus: (state, action) => {\n      state.libraryStatus = action.payload;\n    },\n    setSongPlayingInfo: (state, action) => {\n      state.songPlayingInfo = action.payload;\n    },\n    setSound: (state, action) => {\n      state.sound = action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  setSound,\n  setIsPlaying,\n  setLibraryStatus,\n  setSongPlayingInfo\n} = playerControlReducer.actions;\nexport default playerControlReducer.reducer;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/redux/reducers/playerControlReducer.js"],"names":["createSlice","initialState","isPlaying","libraryStatus","sound","mute","volume","prevVolume","songPlayingInfo","currentTime","duration","animationPercentage","playerControlReducer","name","reducers","setIsPlaying","state","action","payload","setLibraryStatus","setSongPlayingInfo","setSound","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,aAAa,EAAE,KAFI;AAGnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,KADD;AAELC,IAAAA,MAAM,EAAC,GAFF;AAGLC,IAAAA,UAAU,EAAC;AAHN,GAHY;AAQnBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,WAAW,EAAE,CADE;AAEfC,IAAAA,QAAQ,EAAE,CAFK;AAGfC,IAAAA,mBAAmB,EAAE;AAHN;AARE,CAArB;AAeA,OAAO,MAAMC,oBAAoB,GAAGZ,WAAW,CAAC;AAC9Ca,EAAAA,IAAI,EAAE,eADwC;AAE9CZ,EAAAA,YAF8C;AAG9Ca,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACd,SAAN,GAAkBe,MAAM,CAACC,OAAzB;AACD,KAHO;AAIRC,IAAAA,gBAAgB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACnCD,MAAAA,KAAK,CAACb,aAAN,GAAsBc,MAAM,CAACC,OAA7B;AACD,KANO;AAORE,IAAAA,kBAAkB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACR,eAAN,GAAwBS,MAAM,CAACC,OAA/B;AACD,KATO;AAURG,IAAAA,QAAQ,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACZ,KAAN,GAAca,MAAM,CAACC,OAArB;AACD;AAZO;AAHoC,CAAD,CAAxC,C,CAmBP;;AACA,OAAO,MAAM;AAAEG,EAAAA,QAAF;AAAYN,EAAAA,YAAZ;AAA0BI,EAAAA,gBAA1B;AAA4CC,EAAAA;AAA5C,IAAmER,oBAAoB,CAACU,OAA9F;AAEP,eAAeV,oBAAoB,CAACW,OAApC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isPlaying: false,\n  libraryStatus: false,\n  sound: {\n    mute: false,\n    volume:0.5,\n    prevVolume:0.5,\n  },\n  songPlayingInfo: {\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  },\n};\n\nexport const playerControlReducer = createSlice({\n  name: \"playerControl\",\n  initialState,\n  reducers: {\n    setIsPlaying: (state, action) => {\n      state.isPlaying = action.payload;\n    },\n    setLibraryStatus: (state, action) => {\n      state.libraryStatus = action.payload\n    },\n    setSongPlayingInfo: (state, action) => {\n      state.songPlayingInfo = action.payload;\n    },\n    setSound: (state, action) => {\n      state.sound = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setSound, setIsPlaying, setLibraryStatus, setSongPlayingInfo } = playerControlReducer.actions;\n\nexport default playerControlReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}