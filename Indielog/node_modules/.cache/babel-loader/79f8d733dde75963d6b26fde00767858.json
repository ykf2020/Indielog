{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nimport config from './config.js';\nfirebase.initializeApp(config);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\nconst usersDb = db.collection('users');\nconst postsDb = db.collection('posts');\nconst songsDb = db.collection('songs');\nconst topicsDb = db.collection('topics'); // auth\n\nexport const signUp = (email, password, handleSuccess, handleErrMessage) => {\n  auth.createUserWithEmailAndPassword(email, password).then(signUpResult => {\n    usersDb.doc(signUpResult.user.uid).set({\n      email,\n      photoURL: '',\n      displayName: '',\n      introduction: '',\n      createdAt: firebase.firestore.Timestamp.now()\n    }).then(() => {\n      handleSuccess();\n    }).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n          handleErrMessage('信箱已存在');\n          break;\n\n        case \"auth/invalid-email\":\n          handleErrMessage('信箱格式錯誤');\n          break;\n\n        case \"auth/weak-password\":\n          handleErrMessage('密碼強度不足');\n          break;\n\n        default:\n          handleErrMessage(err.code);\n      }\n    });\n  });\n};\nexport const signIn = (email, password, handleSuccess, handleErrMessage) => {\n  auth.signInWithEmailAndPassword(email, password).then(() => {\n    handleSuccess();\n  }).catch(err => {\n    switch (err.code) {\n      case \"auth/invalid-email\":\n        handleErrMessage('信箱格式錯誤');\n        break;\n\n      case \"auth/user-not-found\":\n        handleErrMessage('信箱不存在');\n        break;\n\n      case \"auth/wrong-password\":\n        handleErrMessage('密碼錯誤');\n        break;\n\n      default:\n        handleErrMessage(err.code);\n    }\n  });\n};\nexport const signOut = () => {\n  auth.signOut();\n};\nexport const checkUserStatus = handleUser => {\n  auth.onAuthStateChanged(user => {\n    if (user) {\n      handleUser({\n        uid: user.uid,\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL\n      });\n    } else {\n      handleUser(null);\n    }\n  });\n};\nexport const forgetPassword = email => {\n  return auth.sendPasswordResetEmail(email);\n};\nexport const getUserInfoOnSnapshot = (userId, handleUser) => {\n  usersDb.doc(userId).onSnapshot(userSnapShot => {\n    handleUser(userSnapShot.data());\n  });\n};\nexport const updatePassword = (userEmail, oldPassword, newPassword, handleSuccess, handleErr) => {\n  const credential = firebase.auth.EmailAuthProvider.credential(userEmail, oldPassword);\n  firebase.auth().currentUser.reauthenticateWithCredential(credential).then(() => {\n    firebase.auth().currentUser.updatePassword(newPassword).then(() => {\n      handleSuccess();\n    }).catch(err => {\n      handleErr('新密碼錯誤');\n    });\n  }).catch(err => {\n    handleErr('原密碼錯誤');\n  });\n};\nexport const updateDisplayName = (userId, newDisplayName, handleSuccess, handleError) => {\n  firebase.auth().currentUser.updateProfile({\n    newDisplayName\n  }).then(() => {\n    usersDb.doc(userId).update({\n      displayName: newDisplayName\n    }).then(() => {\n      handleSuccess();\n    }).catch(err => {\n      handleError('修改失敗，請稍後再試');\n    });\n  });\n};\nexport const updateIntroduction = (userId, newIntroduction, handleSuccess, handleError) => {\n  usersDb.doc(userId).update({\n    introduction: newIntroduction\n  }).then(() => {\n    handleSuccess();\n  }).catch(err => {\n    handleError('修改失敗，請稍後再試');\n  });\n};\nexport const updateImage = (userId, file, handleSuccess, handleError) => {\n  const userRef = usersDb.doc(userId);\n  const fileRef = storage.ref('user-avatars/' + userId);\n  const metadata = {\n    contentType: file.type\n  };\n  fileRef.put(file, metadata).then(() => {\n    fileRef.getDownloadURL().then(imageUrl => {\n      auth.currentUser.updateProfile({\n        photoURL: imageUrl\n      }).then(() => {\n        userRef.update({\n          photoURL: imageUrl\n        }).then(() => {\n          handleSuccess();\n        }).catch(err => {\n          handleError('上傳失敗，請稍後再試');\n        });\n      }).catch(err => {\n        handleError('上傳失敗，請稍後再試');\n      });\n    }).catch(err => {\n      handleError('上傳失敗，請稍後再試');\n    });\n  }).catch(err => {\n    handleError('上傳失敗，請稍後再試');\n  });\n}; // firestore\n// topics\n\nexport const getTopics = handleTopics => {\n  topicsDb.get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleTopics(data);\n  });\n};\nexport const getTopicsAndSetDefaultTopic = (handleTopics, handleCurrentTopic) => {\n  topicsDb.get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleTopics(data);\n    handleCurrentTopic(data[0].name);\n  });\n}; // posts\n\nexport const getPost = (postId, handlePost) => {\n  postsDb.doc(postId).get().then(docSnapShot => {\n    handlePost(docSnapShot.data());\n  });\n};\nexport const getPostWithAuthorInfo = (postId, handlePost, handleAuthorInfo) => {\n  postsDb.doc(postId).onSnapshot(docSnapShot => {\n    const data = docSnapShot.data();\n    handlePost(data);\n    usersDb.doc(data.author.uid).get().then(userSnapShot => {\n      handleAuthorInfo(userSnapShot.data());\n    });\n  });\n};\nexport const getSeedPosts = (topic, limit, handlePosts) => {\n  if (!topic) {\n    postsDb.orderBy('createdAt', 'desc').limit(limit).get().then(collectionSnapShot => {\n      const data = collectionSnapShot.docs.map(doc => {\n        const id = doc.id;\n        return { ...doc.data(),\n          id\n        };\n      });\n      handlePosts(data);\n    });\n  } else {\n    postsDb.orderBy('createdAt', 'desc').where('topic', '==', topic).limit(limit).get().then(collectionSnapShot => {\n      const data = collectionSnapShot.docs.map(doc => {\n        const id = doc.id;\n        return { ...doc.data(),\n          id\n        };\n      });\n      handlePosts(data);\n    });\n  }\n};\nexport const getChangePagePosts = (topic, limit, handlePosts, lastRefPlace) => {\n  if (!topic) {\n    postsDb.orderBy('createdAt', 'desc').get().then(collectionSnapShot => {\n      const ref = collectionSnapShot.docs[lastRefPlace];\n      postsDb.orderBy('createdAt', 'desc').startAt(ref).limit(limit).get().then(snapshot => {\n        const data = snapshot.docs.map(doc => {\n          const id = doc.id;\n          return { ...doc.data(),\n            id\n          };\n        });\n        handlePosts(data);\n      });\n    });\n  } else {\n    postsDb.orderBy('createdAt', 'desc').where('topic', '==', topic).get().then(collectionSnapShot => {\n      const ref = collectionSnapShot.docs[lastRefPlace];\n      postsDb.orderBy('createdAt', 'desc').limit(limit).startAt(ref).get().then(snapshot => {\n        const data = snapshot.docs.map(doc => {\n          const id = doc.id;\n          return { ...doc.data(),\n            id\n          };\n        });\n        handlePosts(data);\n      });\n    });\n  }\n};\nexport const getPostsAmount = (topic, limit, handlePosts) => {\n  if (!topic) {\n    postsDb.get().then(collectionSnapShot => {\n      const amount = collectionSnapShot.size;\n      const pages = amount % limit === 0 ? amount / limit : Math.ceil(amount / limit);\n      handlePosts(pages);\n    });\n  } else {\n    postsDb.where('topic', '==', topic).get().then(collectionSnapShot => {\n      const amount = collectionSnapShot.size;\n      const pages = amount % limit === 0 ? amount / limit : Math.ceil(amount / limit);\n      handlePosts(pages);\n    });\n  }\n};\nexport const addNewPost = (image, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc();\n  const imageRef = storage.ref('post-images/' + documentRef.id);\n  const metadata = {\n    contentType: image.type\n  };\n  imageRef.put(image, metadata).then(() => {\n    imageRef.getDownloadURL().then(imageUrl => {\n      documentRef.set({\n        title: postInfo.title,\n        content: postInfo.content,\n        topic: postInfo.topic,\n        createdAt: firebase.firestore.Timestamp.now(),\n        author: {\n          uid: postInfo.userId\n        },\n        imageUrl\n      });\n      handleSuccess(documentRef.id);\n    });\n  });\n};\nexport const updatePost = (postId, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc(postId);\n  documentRef.update({\n    title: postInfo.title,\n    content: postInfo.content,\n    topic: postInfo.topic,\n    updatedAt: firebase.firestore.Timestamp.now(),\n    author: {\n      uid: postInfo.userId\n    }\n  }).then(() => {\n    handleSuccess(postId);\n  });\n};\nexport const updatePostWithNewPic = (postId, image, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc(postId);\n  const imageRef = storage.ref('post-images/' + documentRef.id);\n  const metadata = {\n    contentType: image.type\n  };\n  imageRef.put(image, metadata).then(() => {\n    imageRef.getDownloadURL().then(imageUrl => {\n      documentRef.update({\n        title: postInfo.title,\n        content: postInfo.content,\n        topic: postInfo.topic,\n        updatedAt: firebase.firestore.Timestamp.now(),\n        author: {\n          uid: postInfo.userId\n        },\n        imageUrl\n      });\n      handleSuccess(documentRef.id);\n    });\n  });\n};\nexport const getMyPostsOnSnapshot = (userId, handlePosts) => {\n  postsDb.where('author.uid', '==', userId).onSnapshot(collectionSnapshot => {\n    const data = collectionSnapshot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handlePosts(data);\n  });\n};\nexport const togglePostLiked = (isLiked, postId, userId) => {\n  if (isLiked) {\n    var _firebase$firestore$F;\n\n    postsDb.doc(postId).update({\n      likedBy: (_firebase$firestore$F = firebase.firestore.FieldValue) === null || _firebase$firestore$F === void 0 ? void 0 : _firebase$firestore$F.arrayRemove(userId)\n    });\n  } else {\n    var _firebase$firestore$F2;\n\n    postsDb.doc(postId).update({\n      likedBy: (_firebase$firestore$F2 = firebase.firestore.FieldValue) === null || _firebase$firestore$F2 === void 0 ? void 0 : _firebase$firestore$F2.arrayUnion(userId)\n    });\n  }\n};\nexport const getLikedPosts = (userId, handlePosts) => {\n  postsDb.where('likedBy', 'array-contains', userId).get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handlePosts(data);\n  });\n};\nexport const deletePost = postId => {\n  postsDb.doc(postId).delete().then(() => {\n    alert('已刪除文章');\n  });\n}; // authors\n\nexport const getAuthorInfo = (authorId, handleAuthorInfo) => {\n  usersDb.doc(authorId).get().then(userSnapShot => {\n    handleAuthorInfo(userSnapShot.data());\n  });\n}; // comments\n\nexport const getCommentsOnSnapshot = (area, id, handleComments) => {\n  db.collection(area).doc(id).collection('comments').orderBy('createdAt', 'asc').onSnapshot(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return {\n        id,\n        authorUid: doc.data().authorUid,\n        content: doc.data().content,\n        createdAt: doc.data().createdAt\n      };\n    });\n    handleComments(data);\n  });\n};\nexport const addNewComment = (area, id, commentContent, authorId) => {\n  return db.collection(area).doc(id).collection('comments').doc().set({\n    content: commentContent,\n    createdAt: firebase.firestore.Timestamp.now(),\n    authorUid: authorId\n  });\n}; // songs\n\nexport const getLikedSongs = (userId, handleSongs) => {\n  songsDb.where('likedBy', 'array-contains', userId).get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleSongs(data);\n  });\n};\nexport const getSongsOnSnapShot = handleSongs => {\n  songsDb.onSnapshot(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleSongs(data);\n  });\n};\nexport const toggleSongLiked = (isLiked, songId, userId) => {\n  if (isLiked) {\n    var _firebase$firestore$F3;\n\n    songsDb.doc(songId).update({\n      likedBy: (_firebase$firestore$F3 = firebase.firestore.FieldValue) === null || _firebase$firestore$F3 === void 0 ? void 0 : _firebase$firestore$F3.arrayRemove(userId)\n    });\n  } else {\n    var _firebase$firestore$F4;\n\n    songsDb.doc(songId).update({\n      likedBy: (_firebase$firestore$F4 = firebase.firestore.FieldValue) === null || _firebase$firestore$F4 === void 0 ? void 0 : _firebase$firestore$F4.arrayUnion(userId)\n    });\n  }\n};\nexport const getSongOnSnapShot = (songId, handleSong) => {\n  songsDb.doc(songId).onSnapshot(docSnapshot => handleSong(docSnapshot.data()));\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/Indielog/Indielog/src/utils/firebase.js"],"names":["firebase","config","initializeApp","db","firestore","auth","storage","usersDb","collection","postsDb","songsDb","topicsDb","signUp","email","password","handleSuccess","handleErrMessage","createUserWithEmailAndPassword","then","signUpResult","doc","user","uid","set","photoURL","displayName","introduction","createdAt","Timestamp","now","catch","err","code","signIn","signInWithEmailAndPassword","signOut","checkUserStatus","handleUser","onAuthStateChanged","forgetPassword","sendPasswordResetEmail","getUserInfoOnSnapshot","userId","onSnapshot","userSnapShot","data","updatePassword","userEmail","oldPassword","newPassword","handleErr","credential","EmailAuthProvider","currentUser","reauthenticateWithCredential","updateDisplayName","newDisplayName","handleError","updateProfile","update","updateIntroduction","newIntroduction","updateImage","file","userRef","fileRef","ref","metadata","contentType","type","put","getDownloadURL","imageUrl","getTopics","handleTopics","get","collectionSnapShot","docs","map","id","getTopicsAndSetDefaultTopic","handleCurrentTopic","name","getPost","postId","handlePost","docSnapShot","getPostWithAuthorInfo","handleAuthorInfo","author","getSeedPosts","topic","limit","handlePosts","orderBy","where","getChangePagePosts","lastRefPlace","startAt","snapshot","getPostsAmount","amount","size","pages","Math","ceil","addNewPost","image","postInfo","documentRef","imageRef","title","content","updatePost","updatedAt","updatePostWithNewPic","getMyPostsOnSnapshot","collectionSnapshot","togglePostLiked","isLiked","likedBy","FieldValue","arrayRemove","arrayUnion","getLikedPosts","deletePost","delete","alert","getAuthorInfo","authorId","getCommentsOnSnapshot","area","handleComments","authorUid","addNewComment","commentContent","getLikedSongs","handleSongs","getSongsOnSnapShot","toggleSongLiked","songId","getSongOnSnapShot","handleSong","docSnapshot"],"mappings":"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","sourcesContent":["import firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/firestore'\nimport 'firebase/compat/storage'\nimport config from './config.js'\n\nfirebase.initializeApp(config);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage()\nconst usersDb = db.collection('users')\nconst postsDb = db.collection('posts')\nconst songsDb = db.collection('songs')\nconst topicsDb = db.collection('topics')\n\n\n// auth\nexport const signUp = (email, password, handleSuccess, handleErrMessage) => {\n  auth.createUserWithEmailAndPassword(email, password).then((signUpResult) => {\n    usersDb.doc(signUpResult.user.uid).set({\n      email,\n      photoURL: '',\n      displayName: '',\n      introduction: '',\n      createdAt: firebase.firestore.Timestamp.now()\n    }).then(() => {\n      handleSuccess()\n    }).catch((err) => {\n      switch(err.code) {\n        case \"auth/email-already-in-use\":\n          handleErrMessage('信箱已存在')\n          break\n        case \"auth/invalid-email\":\n          handleErrMessage('信箱格式錯誤')\n          break\n        case \"auth/weak-password\":\n          handleErrMessage('密碼強度不足')\n          break\n        default:\n          handleErrMessage(err.code)\n      }\n    })\n  })\n}\n\nexport const signIn = (email, password, handleSuccess, handleErrMessage) => {\n  auth.signInWithEmailAndPassword(email, password).then(() => {\n    handleSuccess()\n  }).catch((err) => {\n    switch(err.code) {\n      case \"auth/invalid-email\":\n        handleErrMessage('信箱格式錯誤')\n        break\n      case \"auth/user-not-found\":\n        handleErrMessage('信箱不存在')\n        break\n      case \"auth/wrong-password\":\n        handleErrMessage('密碼錯誤')\n        break\n      default:\n        handleErrMessage(err.code)\n    }\n  })\n}\n\nexport const signOut = () => {\n  auth.signOut()\n}\n\nexport const checkUserStatus = (handleUser) => {\n  auth.onAuthStateChanged((user) => {\n    if(user) {\n      handleUser({\n        uid: user.uid,\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL\n      })\n    } else {\n      handleUser(null)\n    }\n  })\n}\n\nexport const forgetPassword = (email) => {\n  return auth.sendPasswordResetEmail(email)\n}\n\n\nexport const getUserInfoOnSnapshot = (userId, handleUser) => {\n  usersDb.doc(userId).onSnapshot((userSnapShot) => {\n    handleUser(userSnapShot.data())\n  })\n}\n\nexport const updatePassword = (userEmail, oldPassword, newPassword, handleSuccess, handleErr) => {\n  const credential = firebase.auth.EmailAuthProvider.credential(userEmail, oldPassword)\n  firebase.auth().currentUser.reauthenticateWithCredential(credential).then(() => {\n    firebase.auth().currentUser.updatePassword(newPassword).then(() => {\n      handleSuccess()\n    }).catch((err) => {\n      handleErr('新密碼錯誤')\n    })\n  }).catch((err) => {\n    handleErr('原密碼錯誤')\n  })\n}\n\nexport const updateDisplayName = (userId, newDisplayName, handleSuccess, handleError) => {\n  firebase.auth().currentUser.updateProfile({\n    newDisplayName,\n  }).then(() => {\n    usersDb.doc(userId).update({\n        displayName: newDisplayName,\n      }).then(() => {\n        handleSuccess()\n      }).catch(err => {\n        handleError('修改失敗，請稍後再試')\n      })\n  })\n}\n\nexport const updateIntroduction = (userId, newIntroduction, handleSuccess, handleError) => {\n  usersDb.doc(userId).update({\n    introduction: newIntroduction\n  }).then(() => {\n    handleSuccess()\n  }).catch(err => {\n    handleError('修改失敗，請稍後再試')\n  })\n}\n\nexport const updateImage = (userId, file, handleSuccess, handleError) => {\n  const userRef = usersDb.doc(userId)\n  const fileRef = storage.ref('user-avatars/' + userId)\n  const metadata = {\n    contentType: file.type\n  }\n  fileRef.put(file, metadata).then(() => {\n    fileRef.getDownloadURL().then((imageUrl) => {\n      auth.currentUser.updateProfile({\n        photoURL:imageUrl\n      }).then(() => {\n        userRef.update({\n          photoURL:imageUrl,\n        })\n        .then(() => {\n          handleSuccess()\n        }).catch(err => {\n          handleError('上傳失敗，請稍後再試')\n        })\n      }).catch(err => {\n        handleError('上傳失敗，請稍後再試')\n      })\n    }).catch(err => {\n      handleError('上傳失敗，請稍後再試')\n    })\n  }).catch(err => {\n    handleError('上傳失敗，請稍後再試')\n  })\n}\n\n// firestore\n// topics\nexport const getTopics = (handleTopics) => {\n  topicsDb.get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleTopics(data)\n  })\n}\n\nexport const getTopicsAndSetDefaultTopic = (handleTopics, handleCurrentTopic) => {\n  topicsDb.get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleTopics(data)\n    handleCurrentTopic(data[0].name)\n  })\n}\n\n// posts\nexport const getPost = (postId, handlePost) => {\n  postsDb.doc(postId).get().then((docSnapShot) => {\n    handlePost(docSnapShot.data())\n  })\n}\n\nexport const getPostWithAuthorInfo = (postId, handlePost, handleAuthorInfo) => {\n  postsDb.doc(postId).onSnapshot((docSnapShot) => {\n    const data = docSnapShot.data()\n    handlePost(data)\n    usersDb.doc(data.author.uid).get().then((userSnapShot) => {\n      handleAuthorInfo(userSnapShot.data())\n    })\n  })\n}\n\nexport const getSeedPosts = (topic, limit, handlePosts) => {\n  if(!topic) {\n    postsDb.orderBy('createdAt','desc').limit(limit).get().then((collectionSnapShot) => {\n      const data = collectionSnapShot.docs.map((doc) => {\n        const id = doc.id\n        return {...doc.data(),id}\n      })\n      handlePosts(data)\n    })\n  } else {\n    postsDb.orderBy('createdAt','desc').where('topic','==',topic).limit(limit).get().then((collectionSnapShot) => {\n      const data = collectionSnapShot.docs.map((doc) => {\n        const id = doc.id\n        return {...doc.data(),id}\n      })\n      handlePosts(data)\n    })\n  }\n}\n\nexport const getChangePagePosts = (topic, limit, handlePosts, lastRefPlace) => {\n  if(!topic) {\n    postsDb.orderBy('createdAt','desc').get().then((collectionSnapShot) => {\n      const ref = collectionSnapShot.docs[lastRefPlace]\n      postsDb.orderBy('createdAt','desc').startAt(ref).limit(limit).get().then(snapshot => {\n        const data = snapshot.docs.map((doc) => {\n          const id = doc.id\n          return {...doc.data(),id}\n        })\n        handlePosts(data)\n      })\n    })\n  } else {\n    postsDb.orderBy('createdAt','desc').where('topic','==',topic).get().then((collectionSnapShot) => {\n      const ref = collectionSnapShot.docs[lastRefPlace]\n      postsDb.orderBy('createdAt','desc').limit(limit).startAt(ref).get().then(snapshot => {\n        const data = snapshot.docs.map((doc) => {\n          const id = doc.id\n          return {...doc.data(),id}\n        })\n        handlePosts(data)\n      })\n    })\n  }\n}\n\nexport const getPostsAmount = (topic, limit, handlePosts) => {\n  if(!topic) {\n    postsDb.get().then(collectionSnapShot => {\n      const amount = collectionSnapShot.size\n      const pages = amount % limit === 0 ? amount / limit : Math.ceil(amount / limit);\n      handlePosts(pages)\n    })\n  } else {\n    postsDb.where('topic','==',topic).get().then(collectionSnapShot => {\n      const amount = collectionSnapShot.size\n      const pages = amount % limit === 0 ? amount / limit : Math.ceil(amount / limit);\n      handlePosts(pages)\n    })\n  }\n\n}\n\nexport const addNewPost = (image, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc()\n  const imageRef = storage.ref('post-images/' + documentRef.id)\n  const metadata = {\n    contentType: image.type\n  }\n\n  imageRef.put(image, metadata).then(() => {\n    imageRef.getDownloadURL().then((imageUrl) => {\n      documentRef.set({\n        title: postInfo.title,\n        content: postInfo.content,\n        topic: postInfo.topic,\n        createdAt: firebase.firestore.Timestamp.now(),\n        author: {\n          uid: postInfo.userId,\n        },\n        imageUrl\n      })\n      handleSuccess(documentRef.id)\n    })\n  })\n}\n\nexport const updatePost = (postId, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc(postId)\n  documentRef.update({\n    title: postInfo.title,\n    content: postInfo.content,\n    topic: postInfo.topic,\n    updatedAt: firebase.firestore.Timestamp.now(),\n    author: {\n      uid: postInfo.userId,\n    }\n    }).then(() => {\n      handleSuccess(postId)\n    })\n}\n\nexport const updatePostWithNewPic = (postId, image, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc(postId)\n  const imageRef = storage.ref('post-images/' + documentRef.id)\n  const metadata = {\n    contentType: image.type\n  }\n\n  imageRef.put(image, metadata).then(() => {\n    imageRef.getDownloadURL().then((imageUrl) => {\n      documentRef.update({\n        title: postInfo.title,\n        content: postInfo.content,\n        topic: postInfo.topic,\n        updatedAt: firebase.firestore.Timestamp.now(),\n        author: {\n          uid: postInfo.userId,\n        },\n        imageUrl\n      })\n      handleSuccess(documentRef.id)\n    })\n  })\n}\n\nexport const getMyPostsOnSnapshot = (userId, handlePosts) => {\n  postsDb.where('author.uid','==', userId).onSnapshot((collectionSnapshot) => {\n    const data = collectionSnapshot.docs.map((doc) => {\n      const id = doc.id\n      return { ...doc.data(), id }\n    })\n    handlePosts(data)\n  })\n}\n\nexport const togglePostLiked = (isLiked, postId, userId) => {\n  if(isLiked) {\n    postsDb.doc(postId).update({\n      likedBy: firebase.firestore.FieldValue?.arrayRemove(userId)\n    })\n  } else {\n    postsDb.doc(postId).update({\n      likedBy: firebase.firestore.FieldValue?.arrayUnion(userId)\n    })\n  }\n}\n\nexport const getLikedPosts = (userId, handlePosts) => {\n  postsDb.where('likedBy', 'array-contains', userId).get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handlePosts(data)\n  })\n}\n\nexport const deletePost = (postId) => {\n  postsDb.doc(postId).delete().then(() => {\n    alert('已刪除文章')\n  })\n}\n\n// authors\nexport const getAuthorInfo = (authorId, handleAuthorInfo) => {\n  usersDb.doc(authorId).get().then((userSnapShot) => {\n    handleAuthorInfo(userSnapShot.data())\n  })\n}\n\n// comments\nexport const getCommentsOnSnapshot = (area, id, handleComments) => {\n  db.collection(area).doc(id).collection('comments').orderBy('createdAt','asc').onSnapshot((collectionSnapShot) => {\n     const data = collectionSnapShot.docs.map((doc) => {\n       const id = doc.id\n       return {\n         id,\n         authorUid: doc.data().authorUid,\n         content: doc.data().content,\n         createdAt: doc.data().createdAt\n       }\n     })\n     handleComments(data)\n  })\n}\n\nexport const addNewComment = (area, id, commentContent, authorId) => {\n  return db.collection(area).doc(id).collection('comments').doc().set({\n    content: commentContent,\n    createdAt: firebase.firestore.Timestamp.now(),\n    authorUid: authorId,\n  })\n}\n\n// songs\nexport const getLikedSongs = (userId, handleSongs) => {\n  songsDb.where('likedBy', 'array-contains', userId).get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleSongs(data)\n  })\n}\n\nexport const getSongsOnSnapShot = (handleSongs) => {\n  songsDb.onSnapshot((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleSongs(data)\n  })\n}\n\nexport const toggleSongLiked = (isLiked, songId, userId) => {\n  if(isLiked) {\n    songsDb.doc(songId).update({\n      likedBy: firebase.firestore.FieldValue?.arrayRemove(userId)\n    })\n  } else {\n    songsDb.doc(songId).update({\n      likedBy: firebase.firestore.FieldValue?.arrayUnion(userId)\n    })\n  }\n}\n\nexport const getSongOnSnapShot = (songId, handleSong) => {\n  songsDb.doc(songId).onSnapshot((docSnapshot) => handleSong(docSnapshot.data()))\n}\n\nexport default firebase\n"]},"metadata":{},"sourceType":"module"}