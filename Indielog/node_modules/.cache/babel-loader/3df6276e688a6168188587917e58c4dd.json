{"ast":null,"code":"var _jsxFileName = \"/Users/fanyukun/Documents/react/indielog/src/pages/Blog/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Post from '../../components/Post';\nimport firebase, { getTopics, getPostsWithoutTopic, getPostsWithTopic } from '../../utils/firebase';\nimport \"firebase/compat/firestore\";\nimport { useLocation } from 'react-router-dom';\nimport { BlogPageContainer, PostsContainer, TopicsContainer, Title, TopicsWrap, Topic, PostLink } from './BlogElements.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Blog = () => {\n  _s();\n\n  const [topics, setTopics] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const location = useLocation();\n  const urlSearchParams = new URLSearchParams(location.search);\n  const currentTopic = urlSearchParams.get('topic');\n  useEffect(() => {\n    getTopics(setTopics);\n  }, []);\n  useEffect(() => {\n    if (!currentTopic) {\n      getPostsWithoutTopic(setPosts);\n    } else {\n      getPostsWithTopic(setPosts);\n    }\n  }, [currentTopic]);\n  return /*#__PURE__*/_jsxDEV(BlogPageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TopicsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\u5206\\u985E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopicsWrap, {\n        children: [/*#__PURE__*/_jsxDEV(Topic, {\n          to: \"/blog\",\n          active: !currentTopic,\n          children: \"\\u5168\\u90E8\\u6587\\u7AE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), topics.map(topic => {\n          return /*#__PURE__*/_jsxDEV(Topic, {\n            to: `/blog?topic=${topic.name}`,\n            active: currentTopic === topic.name,\n            children: topic.name\n          }, topic.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 18\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsContainer, {\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(PostLink, {\n          to: `/blogpost/${post.id}`,\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            createdAt: post.createdAt.toDate().toLocaleString([], {\n              year: 'numeric',\n              month: 'numeric',\n              day: 'numeric'\n            }),\n            imageUrl: post.imageUrl,\n            topic: post.topic,\n            title: post.title\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Blog, \"ho58qNBbgViKC6jraM1cqsoc8R0=\", false, function () {\n  return [useLocation];\n});\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/pages/Blog/index.js"],"names":["useState","useEffect","Post","firebase","getTopics","getPostsWithoutTopic","getPostsWithTopic","useLocation","BlogPageContainer","PostsContainer","TopicsContainer","Title","TopicsWrap","Topic","PostLink","Blog","topics","setTopics","posts","setPosts","location","urlSearchParams","URLSearchParams","search","currentTopic","get","map","topic","name","id","post","createdAt","toDate","toLocaleString","year","month","day","imageUrl","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Post from '../../components/Post'\nimport firebase, { getTopics, getPostsWithoutTopic, getPostsWithTopic } from '../../utils/firebase'\nimport \"firebase/compat/firestore\"\nimport { useLocation } from 'react-router-dom'\nimport {\n  BlogPageContainer,\n  PostsContainer,\n  TopicsContainer,\n  Title,\n  TopicsWrap,\n  Topic,\n  PostLink\n} from './BlogElements.js'\n\n\nconst Blog = () => {\n  const [topics, setTopics] = useState([])\n  const [posts, setPosts] = useState([])\n  const location = useLocation()\n  const urlSearchParams = new URLSearchParams(location.search)\n  const currentTopic = urlSearchParams.get('topic')\n  useEffect(() => {\n    getTopics(setTopics)\n  },[])\n  useEffect(() => {\n    if(!currentTopic) {\n      getPostsWithoutTopic(setPosts)\n    } else {\n      getPostsWithTopic(setPosts)\n    }\n  },[currentTopic])\n\n  return (\n    <BlogPageContainer>\n      <TopicsContainer>\n        <Title>分類</Title>\n        <TopicsWrap>\n        <Topic\n         to='/blog'\n         active={!currentTopic}\n        >全部文章</Topic>\n        {topics.map(topic => {\n          return <Topic\n                    key={topic.id}\n                    to={`/blog?topic=${topic.name}`}\n                    active={currentTopic === topic.name}\n                  >\n                    {topic.name}\n                  </Topic>\n        })}\n        </TopicsWrap>\n      </TopicsContainer>\n      <PostsContainer>\n        {posts.map((post) => {\n          return <PostLink to={`/blogpost/${post.id}`}>\n                    <Post key={post.id}\n                          createdAt={post.createdAt.toDate().toLocaleString([],{year: 'numeric', month: 'numeric', day: 'numeric'})}\n                          imageUrl={post.imageUrl} topic={post.topic}\n                          title={post.title}\n                    />\n                </PostLink>\n        })}\n      </PostsContainer>\n    </BlogPageContainer>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}