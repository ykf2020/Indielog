{"ast":null,"code":"import _slicedToArray from\"/Users/fanyukun/Documents/react/Indielog/Indielog/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{getLikedSongs}from'../../utils/firebase';import{useSelector}from\"react-redux\";import{MemberPageContainer,TitleButtonsGroup,TitleNormalButton,TitleActiveButton,Song,SongInfo,SongName,AuthorName,NumberDiv,Number,ImgDiv,SongDesc}from'./CollectionSongsElements.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CollectionSongs=function CollectionSongs(){var user=useSelector(function(store){return store.user.currentUser;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),likedSongs=_useState2[0],setLikedSongs=_useState2[1];useEffect(function(){getLikedSongs(user.uid,setLikedSongs);},[]);return/*#__PURE__*/_jsxs(MemberPageContainer,{children:[/*#__PURE__*/_jsxs(TitleButtonsGroup,{children:[/*#__PURE__*/_jsx(TitleActiveButton,{children:\"\\u8AAA\\u8B9A\\u7684\\u97F3\\u6A02\"}),/*#__PURE__*/_jsx(TitleNormalButton,{to:\"/member/collections/posts\",children:\"\\u8AAA\\u8B9A\\u7684\\u6587\\u7AE0\"})]}),likedSongs.map(function(song,index){return/*#__PURE__*/_jsx(Song,{children:/*#__PURE__*/_jsxs(SongInfo,{to:\"/songs/\".concat(song.id),children:[/*#__PURE__*/_jsx(NumberDiv,{children:/*#__PURE__*/_jsx(Number,{children:index+1})}),/*#__PURE__*/_jsx(ImgDiv,{children:/*#__PURE__*/_jsx(\"img\",{alt:\"\",src:song.cover})}),/*#__PURE__*/_jsxs(SongDesc,{children:[/*#__PURE__*/_jsx(SongName,{children:song===null||song===void 0?void 0:song.name}),/*#__PURE__*/_jsx(AuthorName,{children:song===null||song===void 0?void 0:song.artist})]})]})});})]});};export default CollectionSongs;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/Indielog/Indielog/src/pages/CollectionSongs/index.js"],"names":["useState","useEffect","getLikedSongs","useSelector","MemberPageContainer","TitleButtonsGroup","TitleNormalButton","TitleActiveButton","Song","SongInfo","SongName","AuthorName","NumberDiv","Number","ImgDiv","SongDesc","CollectionSongs","user","store","currentUser","likedSongs","setLikedSongs","uid","map","song","index","id","cover","name","artist"],"mappings":"oIAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,aAAT,KAA8B,sBAA9B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OACEC,mBADF,CAEEC,iBAFF,CAGEC,iBAHF,CAIEC,iBAJF,CAKEC,IALF,CAMEC,QANF,CAOEC,QAPF,CAQEC,UARF,CASEC,SATF,CAUEC,MAVF,CAWEC,MAXF,CAYEC,QAZF,KAaO,8BAbP,C,wFAeA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,GAAMC,CAAAA,IAAI,CAAGd,WAAW,CAAC,SAACe,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAN,CAAWE,WAAtB,EAAD,CAAxB,CACA,cAAoCnB,QAAQ,CAAC,EAAD,CAA5C,wCAAOoB,UAAP,eAAmBC,aAAnB,eAEApB,SAAS,CAAC,UAAM,CACdC,aAAa,CAACe,IAAI,CAACK,GAAN,CAAWD,aAAX,CAAb,CACD,CAFQ,CAEP,EAFO,CAAT,CAIA,mBACE,MAAC,mBAAD,yBACA,MAAC,iBAAD,yBACE,KAAC,iBAAD,6CADF,cAEE,KAAC,iBAAD,EAAmB,EAAE,CAAC,2BAAtB,4CAFF,GADA,CAKCD,UAAU,CAACG,GAAX,CAAe,SAACC,IAAD,CAAMC,KAAN,CAAgB,CAC9B,mBACE,KAAC,IAAD,wBACE,MAAC,QAAD,EAAU,EAAE,kBAAYD,IAAI,CAACE,EAAjB,CAAZ,wBACE,KAAC,SAAD,wBACE,KAAC,MAAD,WAASD,KAAK,CAAG,CAAjB,EADF,EADF,cAIE,KAAC,MAAD,wBACE,YAAK,GAAG,CAAC,EAAT,CAAY,GAAG,CAAED,IAAI,CAACG,KAAtB,EADF,EAJF,cAOE,MAAC,QAAD,yBACE,KAAC,QAAD,WAAWH,IAAX,SAAWA,IAAX,iBAAWA,IAAI,CAAEI,IAAjB,EADF,cAEE,KAAC,UAAD,WAAaJ,IAAb,SAAaA,IAAb,iBAAaA,IAAI,CAAEK,MAAnB,EAFF,GAPF,GADF,EADF,CAgBD,CAjBA,CALD,GADF,CA0BD,CAlCD,CAoCA,cAAeb,CAAAA,eAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { getLikedSongs } from '../../utils/firebase'\nimport { useSelector } from \"react-redux\";\nimport {\n  MemberPageContainer,\n  TitleButtonsGroup,\n  TitleNormalButton,\n  TitleActiveButton,\n  Song,\n  SongInfo,\n  SongName,\n  AuthorName,\n  NumberDiv,\n  Number,\n  ImgDiv,\n  SongDesc,\n} from './CollectionSongsElements.js'\n\nconst CollectionSongs = () => {\n  const user = useSelector((store) => store.user.currentUser)\n  const [likedSongs, setLikedSongs] = useState([])\n\n  useEffect(() => {\n    getLikedSongs(user.uid, setLikedSongs)\n  },[])\n\n  return (\n    <MemberPageContainer>\n    <TitleButtonsGroup>\n      <TitleActiveButton>說讚的音樂</TitleActiveButton>\n      <TitleNormalButton to='/member/collections/posts'>說讚的文章</TitleNormalButton>\n    </TitleButtonsGroup>\n    {likedSongs.map((song,index) => {\n      return (\n        <Song>\n          <SongInfo to={`/songs/${song.id}`}>\n            <NumberDiv>\n              <Number>{index + 1}</Number>\n            </NumberDiv>\n            <ImgDiv>\n              <img alt='' src={song.cover}/>\n            </ImgDiv>\n            <SongDesc>\n              <SongName>{song?.name}</SongName>\n              <AuthorName>{song?.artist}</AuthorName>\n            </SongDesc>\n          </SongInfo>\n        </Song>\n      )\n    })}\n    </MemberPageContainer>\n  )\n}\n\nexport default CollectionSongs\n"]},"metadata":{},"sourceType":"module"}