{"ast":null,"code":"import _regeneratorRuntime from\"/Users/fanyukun/Documents/react/indielog/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/fanyukun/Documents/react/indielog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/fanyukun/Documents/react/indielog/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useRef,useEffect}from'react';import MusicPlayerSmall from'../MusicPlayerSmall';import MusicPlayerFull from'../MusicPlayerFull';import{useDispatch,useSelector}from\"react-redux\";import{setCurrentSong}from\"../../redux/reducers/songReducer\";import{setSongPlayingInfo,setIsPlaying}from\"../../redux/reducers/playerControlReducer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MusicPlayer=function MusicPlayer(){var audioRef=useRef(null);var dispatch=useDispatch();var isPlaying=useSelector(function(store){return store.playerControl.isPlaying;});var sound=useSelector(function(store){return store.playerControl.sound;});var songPlayingInfo=useSelector(function(store){return store.playerControl.songPlayingInfo;});var songs=useSelector(function(store){return store.song.songs;});var currentSong=useSelector(function(store){return store.song.currentSong;});var mode=useSelector(function(store){return store.playerControl.mode;});var loop=useSelector(function(store){return store.playerControl.loop;});var timeUpdateHandler=function timeUpdateHandler(e){var current=e.target.currentTime;var duration=e.target.duration;var roundedCurrent=Math.round(current);var roundedDuration=Math.round(duration);var animationPercentage=Math.round(roundedCurrent/roundedDuration*100);dispatch(setSongPlayingInfo(_objectSpread(_objectSpread({},songPlayingInfo),{},{currentTime:current,duration:duration,animationPercentage:animationPercentage})));};var songEndHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentIndex;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:currentIndex=songs.findIndex(function(song){return song.id===currentSong.id;});_context.next=3;return dispatch(setCurrentSong(songs[(currentIndex+1)%songs.length]));case 3:if(isPlaying)dispatch(setIsPlaying(true));case 4:case\"end\":return _context.stop();}}},_callee);}));return function songEndHandler(){return _ref.apply(this,arguments);};}();useEffect(function(){if(mode===0)dispatch(setIsPlaying(false));},[mode]);useEffect(function(){if(isPlaying){audioRef.current.play();}else if(!isPlaying){audioRef.current.pause();}},[isPlaying,currentSong,mode]);return/*#__PURE__*/_jsxs(_Fragment,{children:[mode===1&&/*#__PURE__*/_jsx(MusicPlayerSmall,{audioRef:audioRef}),(mode===2||mode===3)&&/*#__PURE__*/_jsx(MusicPlayerFull,{audioRef:audioRef}),/*#__PURE__*/_jsx(\"audio\",{volume:sound.volume,muted:sound.mute,onTimeUpdate:timeUpdateHandler,onLoadedMetadata:timeUpdateHandler,ref:audioRef,src:currentSong.audio,onEnded:songEndHandler,loop:loop})]});};export default MusicPlayer;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/components/MusicPlayer/index.js"],"names":["useRef","useEffect","MusicPlayerSmall","MusicPlayerFull","useDispatch","useSelector","setCurrentSong","setSongPlayingInfo","setIsPlaying","MusicPlayer","audioRef","dispatch","isPlaying","store","playerControl","sound","songPlayingInfo","songs","song","currentSong","mode","loop","timeUpdateHandler","e","current","target","currentTime","duration","roundedCurrent","Math","round","roundedDuration","animationPercentage","songEndHandler","currentIndex","findIndex","id","length","play","pause","volume","mute","audio"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react'\nimport MusicPlayerSmall from '../MusicPlayerSmall'\nimport MusicPlayerFull from '../MusicPlayerFull'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentSong } from \"../../redux/reducers/songReducer\";\nimport { setSongPlayingInfo, setIsPlaying } from \"../../redux/reducers/playerControlReducer\"\n\nconst MusicPlayer = () => {\n  const audioRef = useRef(null)\n  const dispatch = useDispatch()\n  const isPlaying = useSelector((store) => store.playerControl.isPlaying)\n  const sound = useSelector((store) => store.playerControl.sound)\n  const songPlayingInfo = useSelector((store) => store.playerControl.songPlayingInfo)\n  const songs = useSelector((store) => store.song.songs)\n  const currentSong = useSelector((store) => store.song.currentSong)\n  const mode = useSelector((store) => store.playerControl.mode)\n  const loop = useSelector((store) => store.playerControl.loop)\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime\n    const duration = e.target.duration\n    const roundedCurrent = Math.round(current)\n    const roundedDuration = Math.round(duration)\n    const animationPercentage = Math.round((roundedCurrent / roundedDuration) * 100 )\n    dispatch(setSongPlayingInfo({\n      ...songPlayingInfo,\n      currentTime: current,\n      duration,\n      animationPercentage,\n    }))\n  }\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n    await dispatch(setCurrentSong(songs[(currentIndex + 1) % songs.length]))\n    if (isPlaying) dispatch(setIsPlaying(true))\n  }\n\n  useEffect(() => {\n    if(mode === 0) dispatch(setIsPlaying(false))\n  },[mode])\n\n  useEffect(() => {\n    if(isPlaying) {\n      audioRef.current.play()\n    } else if (!isPlaying) {\n      audioRef.current.pause()\n    }\n  }, [isPlaying, currentSong, mode])\n  return (\n    <>\n      {(mode === 1 ) && <MusicPlayerSmall audioRef={audioRef} />}\n      {(mode === 2 || mode === 3) && <MusicPlayerFull audioRef={audioRef} />}\n      <audio\n        volume={sound.volume}\n        muted={sound.mute}\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n        loop={loop}\n      ></audio>\n    </>\n  )\n}\n\nexport default MusicPlayer\n"]},"metadata":{},"sourceType":"module"}