{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={isPlaying:false,loop:false,mode:0,// 0: turnoff; 1: small player; 2: full player without library; 3: fullPlayer with library\nsound:{mute:false,volume:0.5,prevVolume:0.5},songPlayingInfo:{currentTime:0,duration:0,animationPercentage:0},mainGetIn:false};export var playerControlReducer=createSlice({name:\"playerControl\",initialState:initialState,reducers:{setIsPlaying:function setIsPlaying(state,action){state.isPlaying=action.payload;},setMode:function setMode(state,action){state.mode=action.payload;},setSongPlayingInfo:function setSongPlayingInfo(state,action){state.songPlayingInfo=action.payload;},setSound:function setSound(state,action){state.sound=action.payload;},setLoop:function setLoop(state,action){state.loop=action.payload;},setMainGetIn:function setMainGetIn(state,action){state.loop=action.payload;}}});// Action creators are generated for each case reducer function\nvar _playerControlReducer=playerControlReducer.actions,setMainGetIn=_playerControlReducer.setMainGetIn,setSound=_playerControlReducer.setSound,setIsPlaying=_playerControlReducer.setIsPlaying,setMode=_playerControlReducer.setMode,setSongPlayingInfo=_playerControlReducer.setSongPlayingInfo,setLoop=_playerControlReducer.setLoop;export{setMainGetIn,setSound,setIsPlaying,setMode,setSongPlayingInfo,setLoop};export default playerControlReducer.reducer;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/redux/reducers/playerControlReducer.js"],"names":["createSlice","initialState","isPlaying","loop","mode","sound","mute","volume","prevVolume","songPlayingInfo","currentTime","duration","animationPercentage","mainGetIn","playerControlReducer","name","reducers","setIsPlaying","state","action","payload","setMode","setSongPlayingInfo","setSound","setLoop","setMainGetIn","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE,KADQ,CAEnBC,IAAI,CAAC,KAFc,CAGnBC,IAAI,CAAE,CAHa,CAGV;AACTC,KAAK,CAAE,CACLC,IAAI,CAAE,KADD,CAELC,MAAM,CAAC,GAFF,CAGLC,UAAU,CAAC,GAHN,CAJY,CASnBC,eAAe,CAAE,CACfC,WAAW,CAAE,CADE,CAEfC,QAAQ,CAAE,CAFK,CAGfC,mBAAmB,CAAE,CAHN,CATE,CAcnBC,SAAS,CAAE,KAdQ,CAArB,CAiBA,MAAO,IAAMC,CAAAA,oBAAoB,CAAGd,WAAW,CAAC,CAC9Ce,IAAI,CAAE,eADwC,CAE9Cd,YAAY,CAAZA,YAF8C,CAG9Ce,QAAQ,CAAE,CACRC,YAAY,CAAE,sBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/BD,KAAK,CAAChB,SAAN,CAAkBiB,MAAM,CAACC,OAAzB,CACD,CAHO,CAIRC,OAAO,CAAE,iBAACH,KAAD,CAAQC,MAAR,CAAmB,CAC1BD,KAAK,CAACd,IAAN,CAAae,MAAM,CAACC,OAApB,CACD,CANO,CAORE,kBAAkB,CAAE,4BAACJ,KAAD,CAAQC,MAAR,CAAmB,CACrCD,KAAK,CAACT,eAAN,CAAwBU,MAAM,CAACC,OAA/B,CACD,CATO,CAURG,QAAQ,CAAE,kBAACL,KAAD,CAAQC,MAAR,CAAmB,CAC3BD,KAAK,CAACb,KAAN,CAAcc,MAAM,CAACC,OAArB,CACD,CAZO,CAaRI,OAAO,CAAC,iBAACN,KAAD,CAAQC,MAAR,CAAmB,CACzBD,KAAK,CAACf,IAAN,CAAagB,MAAM,CAACC,OAApB,CACD,CAfO,CAgBRK,YAAY,CAAC,sBAACP,KAAD,CAAQC,MAAR,CAAmB,CAC9BD,KAAK,CAACf,IAAN,CAAagB,MAAM,CAACC,OAApB,CACD,CAlBO,CAHoC,CAAD,CAAxC,CAyBP;AACO,0BAAuFN,oBAAoB,CAACY,OAA5G,CAAQD,YAAR,uBAAQA,YAAR,CAAsBF,QAAtB,uBAAsBA,QAAtB,CAAgCN,YAAhC,uBAAgCA,YAAhC,CAA8CI,OAA9C,uBAA8CA,OAA9C,CAAuDC,kBAAvD,uBAAuDA,kBAAvD,CAA2EE,OAA3E,uBAA2EA,OAA3E,C,8EAEP,cAAeV,CAAAA,oBAAoB,CAACa,OAApC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isPlaying: false,\n  loop:false,\n  mode: 0, // 0: turnoff; 1: small player; 2: full player without library; 3: fullPlayer with library\n  sound: {\n    mute: false,\n    volume:0.5,\n    prevVolume:0.5,\n  },\n  songPlayingInfo: {\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  },\n  mainGetIn: false,\n};\n\nexport const playerControlReducer = createSlice({\n  name: \"playerControl\",\n  initialState,\n  reducers: {\n    setIsPlaying: (state, action) => {\n      state.isPlaying = action.payload;\n    },\n    setMode: (state, action) => {\n      state.mode = action.payload\n    },\n    setSongPlayingInfo: (state, action) => {\n      state.songPlayingInfo = action.payload;\n    },\n    setSound: (state, action) => {\n      state.sound = action.payload;\n    },\n    setLoop:(state, action) => {\n      state.loop = action.payload;\n    },\n    setMainGetIn:(state, action) => {\n      state.loop = action.payload\n    }\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setMainGetIn, setSound, setIsPlaying, setMode, setSongPlayingInfo, setLoop } = playerControlReducer.actions;\n\nexport default playerControlReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}