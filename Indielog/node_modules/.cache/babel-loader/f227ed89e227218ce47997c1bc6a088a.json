{"ast":null,"code":"var _jsxFileName = \"/Users/fanyukun/Documents/react/indielog/src/pages/MyPosts/index.js\",\n    _s = $RefreshSig$();\n\nimport Post from '../../components/Post';\nimport { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport firebase from '../../utils/firebase';\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\nimport { MemberPageContainer, TitleButtonsGroup, TitleNormalButton, TitleActiveButton, LinkWithoutDecoration, ButtonsGroup, Button, PostDiv } from './MyPostsElements.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPosts = () => {\n  _s();\n\n  const user = firebase.auth().currentUser;\n  const [posts, setPosts] = useState([]);\n\n  function deletePost(postId) {\n    firebase.firestore().collection('posts').doc(postId).delete().then(() => {\n      alert('已刪除文章');\n    });\n  }\n\n  useEffect(() => {\n    firebase.firestore().collection('posts').where('author.uid', '==', user.uid).onSnapshot(collectionSnapshot => {\n      const data = collectionSnapshot.docs.map(doc => {\n        const id = doc.id;\n        return { ...doc.data(),\n          id\n        };\n      });\n      setPosts(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MemberPageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TitleButtonsGroup, {\n      children: [/*#__PURE__*/_jsxDEV(TitleActiveButton, {\n        children: \"\\u6211\\u7684\\u6587\\u7AE0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TitleNormalButton, {\n        to: \"/member/personal-info\",\n        children: \"\\u6703\\u54E1\\u8CC7\\u6599\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(PostDiv, {\n        children: [/*#__PURE__*/_jsxDEV(LinkWithoutDecoration, {\n          to: `/blogpost/${post.id}`,\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            imageUrl: post.imageUrl,\n            title: post.title,\n            createdAt: post.createdAt.toDate().toLocaleString(),\n            topic: post.topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsGroup, {\n          children: [/*#__PURE__*/_jsxDEV(LinkWithoutDecoration, {\n            to: `/editpost/${post.id}`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              deletePost(post.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = MyPosts;\nexport default MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/pages/MyPosts/index.js"],"names":["Post","useState","useEffect","FontAwesomeIcon","faPen","faTrash","firebase","MemberPageContainer","TitleButtonsGroup","TitleNormalButton","TitleActiveButton","LinkWithoutDecoration","ButtonsGroup","Button","PostDiv","MyPosts","user","auth","currentUser","posts","setPosts","deletePost","postId","firestore","collection","doc","delete","then","alert","where","uid","onSnapshot","collectionSnapshot","data","docs","map","id","post","imageUrl","title","createdAt","toDate","toLocaleString","topic"],"mappings":"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","sourcesContent":["import Post from '../../components/Post'\nimport { useState, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPen, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport firebase from '../../utils/firebase'\nimport \"firebase/compat/firestore\"\nimport \"firebase/compat/auth\"\nimport {\n  MemberPageContainer,\n  TitleButtonsGroup,\n  TitleNormalButton,\n  TitleActiveButton,\n  LinkWithoutDecoration,\n  ButtonsGroup,\n  Button,\n  PostDiv\n} from './MyPostsElements.js'\n\nconst MyPosts = () => {\n  const user = firebase.auth().currentUser\n  const [posts, setPosts] = useState([])\n\n  function deletePost(postId) {\n    firebase\n      .firestore()\n      .collection('posts')\n      .doc(postId)\n      .delete()\n      .then(() => {\n        alert('已刪除文章')\n      })\n  }\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection('posts')\n      .where('author.uid','==', user.uid)\n      .onSnapshot((collectionSnapshot) => {\n        const data = collectionSnapshot.docs.map((doc) => {\n          const id = doc.id\n          return { ...doc.data(), id }\n        })\n        setPosts(data)\n      })\n  },[])\n  return (\n    <MemberPageContainer>\n      <TitleButtonsGroup>\n        <TitleActiveButton>我的文章</TitleActiveButton>\n        <TitleNormalButton to='/member/personal-info'>會員資料</TitleNormalButton>\n      </TitleButtonsGroup>\n      {posts.map(post => {\n        return (\n          <PostDiv key={post.id}>\n            <LinkWithoutDecoration to={`/blogpost/${post.id}`}>\n              <Post imageUrl={post.imageUrl} title={post.title} createdAt={post.createdAt.toDate().toLocaleString()} topic={post.topic}/>\n            </LinkWithoutDecoration>\n            <ButtonsGroup>\n              <LinkWithoutDecoration to={`/editpost/${post.id}`}><Button><FontAwesomeIcon icon={faPen}/></Button></LinkWithoutDecoration>\n              <Button onClick={() => {deletePost(post.id)}}><FontAwesomeIcon icon={faTrash}/></Button>\n            </ButtonsGroup>\n          </PostDiv>\n        )\n      })}\n    </MemberPageContainer>\n  )\n}\n\nexport default MyPosts\n"]},"metadata":{},"sourceType":"module"}