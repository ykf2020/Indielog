{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjquiByhMI0pc7g_Cx482Kp2tK-c1mlQ8\",\n  authDomain: \"indielog-172c8.firebaseapp.com\",\n  projectId: \"indielog-172c8\",\n  storageBucket: \"indielog-172c8.appspot.com\",\n  messagingSenderId: \"97403270536\",\n  appId: \"1:97403270536:web:5ea48f5aa3c58801bdf63d\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\nconst usersDb = db.collection('users');\nconst postsDb = db.collection('posts');\nconst songsDb = db.collection('songs');\nconst topicsDb = db.collection('topics'); // auth\n\nexport const signUp = (email, password, handleSuccess, handleErrMessage) => {\n  auth.createUserWithEmailAndPassword(email, password).then(signUpResult => {\n    usersDb.doc(signUpResult.user.uid).set({\n      email,\n      photoURL: '',\n      displayName: '',\n      introduction: '',\n      createdAt: firebase.firestore.Timestamp.now()\n    }).then(() => {\n      handleSuccess();\n    }).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n          handleErrMessage('信箱已存在');\n          break;\n\n        case \"auth/invalid-email\":\n          handleErrMessage('信箱格式錯誤');\n          break;\n\n        case \"auth/weak-password\":\n          handleErrMessage('密碼強度不足');\n          break;\n\n        default:\n          handleErrMessage(err.code);\n      }\n    });\n  });\n};\nexport const signIn = (email, password, handleSuccess, handleErrMessage) => {\n  auth.signInWithEmailAndPassword(email, password).then(() => {\n    handleSuccess();\n  }).catch(err => {\n    switch (err.code) {\n      case \"auth/invalid-email\":\n        handleErrMessage('信箱格式錯誤');\n        break;\n\n      case \"auth/user-not-found\":\n        handleErrMessage('信箱不存在');\n        break;\n\n      case \"auth/wrong-password\":\n        handleErrMessage('密碼錯誤');\n        break;\n\n      default:\n        handleErrMessage(err.code);\n    }\n  });\n};\nexport const signOut = () => {\n  auth.signOut();\n};\nexport const checkUserStatus = handleUser => {\n  auth.onAuthStateChanged(user => {\n    if (user) {\n      handleUser({\n        uid: user.uid,\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL\n      });\n    } else {\n      handleUser(null);\n    }\n  });\n};\nexport const forgetPassword = email => {\n  return auth.sendPasswordResetEmail(email);\n}; // firestore\n// topics\n\nexport const getTopics = handleTopics => {\n  topicsDb.get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleTopics(data);\n  });\n};\nexport const getTopicsAndSetDefaultTopic = (handleTopics, handleCurrentTopic) => {\n  topicsDb.get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleTopics(data);\n    handleCurrentTopic(data[0].name);\n  });\n}; // posts\n\nexport const getPost = (postId, handlePost) => {\n  postsDb.doc(postId).get().then(docSnapShot => {\n    handlePost(docSnapShot.data());\n  });\n};\nexport const getPostWithAuthorInfo = (postId, handlePost, handleAuthorInfo) => {\n  postsDb.doc(postId).onSnapshot(docSnapShot => {\n    const data = docSnapShot.data();\n    handlePost(data);\n    usersDb.doc(data.author.uid).get().then(userSnapShot => {\n      handleAuthorInfo(userSnapShot.data());\n    });\n  });\n};\nexport const getSeedPosts = (topic, limit, handlePosts, lastPostSnapshotRef) => {\n  if (!topic) {\n    postsDb.orderBy('createdAt', 'desc').limit(limit).get().then(collectionSnapShot => {\n      const data = collectionSnapShot.docs.map(doc => {\n        const id = doc.id;\n        return { ...doc.data(),\n          id\n        };\n      });\n      handlePosts(data);\n      lastPostSnapshotRef.current = collectionSnapShot.docs[collectionSnapShot.docs.length - 1];\n    });\n  } else {\n    postsDb.orderBy('createdAt', 'desc').where('topic', '==', topic).limit(limit).get().then(collectionSnapShot => {\n      const data = collectionSnapShot.docs.map(doc => {\n        const id = doc.id;\n        return { ...doc.data(),\n          id\n        };\n      });\n      handlePosts(data);\n      lastPostSnapshotRef.current = collectionSnapShot.docs[collectionSnapShot.docs.length - 1];\n    });\n  }\n};\nexport const getNextPagePosts = (topic, limit, handlePosts, lastPostSnapshotRef) => {\n  if (!topic) {\n    postsDb.orderBy('createdAt', 'desc').limit(limit).get().then(collectionSnapShot => {\n      const data = collectionSnapShot.docs.map(doc => {\n        const id = doc.id;\n        return { ...doc.data(),\n          id\n        };\n      });\n      handlePosts(data);\n      lastPostSnapshotRef.current = collectionSnapShot.docs[collectionSnapShot.docs.length - 1];\n    });\n  } else {\n    postsDb.orderBy('createdAt', 'desc').where('topic', '==', topic).limit(limit).get().then(collectionSnapShot => {\n      const data = collectionSnapShot.docs.map(doc => {\n        const id = doc.id;\n        return { ...doc.data(),\n          id\n        };\n      });\n      handlePosts(data);\n      lastPostSnapshotRef.current = collectionSnapShot.docs[collectionSnapShot.docs.length - 1];\n    });\n  }\n};\nexport const getPostsAmount = (topic, handlePosts) => {\n  if (!topic) {\n    postsDb.get().then(collectionSnapShot => {\n      handlePosts(collectionSnapShot.size);\n    });\n  } else {\n    postsDb.where('topic', '==', topic).get().then(collectionSnapShot => {\n      handlePosts(collectionSnapShot.size);\n    });\n  }\n};\nexport const addNewPost = (image, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc();\n  const imageRef = storage.ref('post-images/' + documentRef.id);\n  const metadata = {\n    contentType: image.type\n  };\n  imageRef.put(image, metadata).then(() => {\n    imageRef.getDownloadURL().then(imageUrl => {\n      documentRef.set({\n        title: postInfo.title,\n        content: postInfo.content,\n        topic: postInfo.topic,\n        createdAt: firebase.firestore.Timestamp.now(),\n        author: {\n          uid: postInfo.userId\n        },\n        imageUrl\n      });\n      handleSuccess(documentRef.id);\n    });\n  });\n};\nexport const updatePost = (postId, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc(postId);\n  documentRef.update({\n    title: postInfo.title,\n    content: postInfo.content,\n    topic: postInfo.topic,\n    updatedAt: firebase.firestore.Timestamp.now(),\n    author: {\n      uid: postInfo.userId\n    }\n  }).then(() => {\n    handleSuccess(postId);\n  });\n};\nexport const updatePostWithNewPic = (postId, image, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc(postId);\n  const imageRef = storage.ref('post-images/' + documentRef.id);\n  const metadata = {\n    contentType: image.type\n  };\n  imageRef.put(image, metadata).then(() => {\n    imageRef.getDownloadURL().then(imageUrl => {\n      documentRef.update({\n        title: postInfo.title,\n        content: postInfo.content,\n        topic: postInfo.topic,\n        updatedAt: firebase.firestore.Timestamp.now(),\n        author: {\n          uid: postInfo.userId\n        },\n        imageUrl\n      });\n      handleSuccess(documentRef.id);\n    });\n  });\n};\nexport const getMyPostsOnSnapshot = (userId, handlePosts) => {\n  postsDb.where('author.uid', '==', userId).onSnapshot(collectionSnapshot => {\n    const data = collectionSnapshot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handlePosts(data);\n  });\n};\nexport const togglePostLiked = (isLiked, postId, userId) => {\n  if (isLiked) {\n    var _firebase$firestore$F;\n\n    postsDb.doc(postId).update({\n      likedBy: (_firebase$firestore$F = firebase.firestore.FieldValue) === null || _firebase$firestore$F === void 0 ? void 0 : _firebase$firestore$F.arrayRemove(userId)\n    });\n  } else {\n    var _firebase$firestore$F2;\n\n    postsDb.doc(postId).update({\n      likedBy: (_firebase$firestore$F2 = firebase.firestore.FieldValue) === null || _firebase$firestore$F2 === void 0 ? void 0 : _firebase$firestore$F2.arrayUnion(userId)\n    });\n  }\n};\nexport const getLikedPosts = (userId, handlePosts) => {\n  postsDb.where('likedBy', 'array-contains', userId).get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handlePosts(data);\n  });\n};\nexport const deletePost = postId => {\n  postsDb.doc(postId).delete().then(() => {\n    alert('已刪除文章');\n  });\n}; // authors\n\nexport const getAuthorInfo = (authorId, handleAuthorInfo) => {\n  usersDb.doc(authorId).get().then(userSnapShot => {\n    handleAuthorInfo(userSnapShot.data());\n  });\n}; // comments\n\nexport const getCommentsOnSnapshot = (area, id, handleComments) => {\n  db.collection(area).doc(id).collection('comments').orderBy('createdAt', 'asc').onSnapshot(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      return {\n        authorUid: doc.data().authorUid,\n        content: doc.data().content,\n        createdAt: doc.data().createdAt\n      };\n    });\n    handleComments(data);\n  });\n};\nexport const addNewComment = (area, id, commentContent, authorId) => {\n  return db.collection(area).doc(id).collection('comments').doc().set({\n    content: commentContent,\n    createdAt: firebase.firestore.Timestamp.now(),\n    authorUid: authorId\n  });\n}; // songs\n\nexport const getLikedSongs = (userId, handleSongs) => {\n  songsDb.where('likedBy', 'array-contains', userId).get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleSongs(data);\n  });\n};\nexport const getSongsOnSnapShot = handleSongs => {\n  songsDb.onSnapshot(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleSongs(data);\n  });\n};\nexport const toggleSongLiked = (isLiked, songId, userId) => {\n  if (isLiked) {\n    var _firebase$firestore$F3;\n\n    songsDb.doc(songId).update({\n      likedBy: (_firebase$firestore$F3 = firebase.firestore.FieldValue) === null || _firebase$firestore$F3 === void 0 ? void 0 : _firebase$firestore$F3.arrayRemove(userId)\n    });\n  } else {\n    var _firebase$firestore$F4;\n\n    songsDb.doc(songId).update({\n      likedBy: (_firebase$firestore$F4 = firebase.firestore.FieldValue) === null || _firebase$firestore$F4 === void 0 ? void 0 : _firebase$firestore$F4.arrayUnion(userId)\n    });\n  }\n};\nexport const getSongOnSnapShot = (songId, handleSong) => {\n  songsDb.doc(songId).onSnapshot(docSnapshot => handleSong(docSnapshot.data()));\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/utils/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","auth","storage","usersDb","collection","postsDb","songsDb","topicsDb","signUp","email","password","handleSuccess","handleErrMessage","createUserWithEmailAndPassword","then","signUpResult","doc","user","uid","set","photoURL","displayName","introduction","createdAt","Timestamp","now","catch","err","code","signIn","signInWithEmailAndPassword","signOut","checkUserStatus","handleUser","onAuthStateChanged","forgetPassword","sendPasswordResetEmail","getTopics","handleTopics","get","collectionSnapShot","data","docs","map","id","getTopicsAndSetDefaultTopic","handleCurrentTopic","name","getPost","postId","handlePost","docSnapShot","getPostWithAuthorInfo","handleAuthorInfo","onSnapshot","author","userSnapShot","getSeedPosts","topic","limit","handlePosts","lastPostSnapshotRef","orderBy","current","length","where","getNextPagePosts","getPostsAmount","size","addNewPost","image","postInfo","documentRef","imageRef","ref","metadata","contentType","type","put","getDownloadURL","imageUrl","title","content","userId","updatePost","update","updatedAt","updatePostWithNewPic","getMyPostsOnSnapshot","collectionSnapshot","togglePostLiked","isLiked","likedBy","FieldValue","arrayRemove","arrayUnion","getLikedPosts","deletePost","delete","alert","getAuthorInfo","authorId","getCommentsOnSnapshot","area","handleComments","authorUid","addNewComment","commentContent","getLikedSongs","handleSongs","getSongsOnSnapShot","toggleSongLiked","songId","getSongOnSnapShot","handleSong","docSnapshot"],"mappings":"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","sourcesContent":["import firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/firestore'\nimport 'firebase/compat/storage'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjquiByhMI0pc7g_Cx482Kp2tK-c1mlQ8\",\n  authDomain: \"indielog-172c8.firebaseapp.com\",\n  projectId: \"indielog-172c8\",\n  storageBucket: \"indielog-172c8.appspot.com\",\n  messagingSenderId: \"97403270536\",\n  appId: \"1:97403270536:web:5ea48f5aa3c58801bdf63d\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage()\nconst usersDb = db.collection('users')\nconst postsDb = db.collection('posts')\nconst songsDb = db.collection('songs')\nconst topicsDb = db.collection('topics')\n\n\n// auth\nexport const signUp = (email, password, handleSuccess, handleErrMessage) => {\n  auth.createUserWithEmailAndPassword(email, password).then((signUpResult) => {\n    usersDb.doc(signUpResult.user.uid).set({\n      email,\n      photoURL: '',\n      displayName: '',\n      introduction: '',\n      createdAt: firebase.firestore.Timestamp.now()\n    }).then(() => {\n      handleSuccess()\n    }).catch((err) => {\n      switch(err.code) {\n        case \"auth/email-already-in-use\":\n          handleErrMessage('信箱已存在')\n          break\n        case \"auth/invalid-email\":\n          handleErrMessage('信箱格式錯誤')\n          break\n        case \"auth/weak-password\":\n          handleErrMessage('密碼強度不足')\n          break\n        default:\n          handleErrMessage(err.code)\n      }\n    })\n  })\n}\n\nexport const signIn = (email, password, handleSuccess, handleErrMessage) => {\n  auth.signInWithEmailAndPassword(email, password).then(() => {\n    handleSuccess()\n  }).catch((err) => {\n    switch(err.code) {\n      case \"auth/invalid-email\":\n        handleErrMessage('信箱格式錯誤')\n        break\n      case \"auth/user-not-found\":\n        handleErrMessage('信箱不存在')\n        break\n      case \"auth/wrong-password\":\n        handleErrMessage('密碼錯誤')\n        break\n      default:\n        handleErrMessage(err.code)\n    }\n  })\n}\n\nexport const signOut = () => {\n  auth.signOut()\n}\n\nexport const checkUserStatus = (handleUser) => {\n  auth.onAuthStateChanged((user) => {\n    if(user) {\n      handleUser({\n        uid: user.uid,\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL\n      })\n    } else {\n      handleUser(null)\n    }\n  })\n}\n\nexport const forgetPassword = (email) => {\n  return auth.sendPasswordResetEmail(email)\n}\n\n\n// firestore\n// topics\nexport const getTopics = (handleTopics) => {\n  topicsDb.get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleTopics(data)\n  })\n}\n\nexport const getTopicsAndSetDefaultTopic = (handleTopics, handleCurrentTopic) => {\n  topicsDb.get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleTopics(data)\n    handleCurrentTopic(data[0].name)\n  })\n}\n\n// posts\nexport const getPost = (postId, handlePost) => {\n  postsDb.doc(postId).get().then((docSnapShot) => {\n    handlePost(docSnapShot.data())\n  })\n}\n\nexport const getPostWithAuthorInfo = (postId, handlePost, handleAuthorInfo) => {\n  postsDb.doc(postId).onSnapshot((docSnapShot) => {\n    const data = docSnapShot.data()\n    handlePost(data)\n    usersDb.doc(data.author.uid).get().then((userSnapShot) => {\n      handleAuthorInfo(userSnapShot.data())\n    })\n  })\n}\n\nexport const getSeedPosts = (topic, limit, handlePosts, lastPostSnapshotRef) => {\n  if(!topic) {\n    postsDb.orderBy('createdAt','desc').limit(limit).get().then((collectionSnapShot) => {\n      const data = collectionSnapShot.docs.map((doc) => {\n        const id = doc.id\n        return {...doc.data(),id}\n      })\n      handlePosts(data)\n      lastPostSnapshotRef.current = collectionSnapShot.docs[collectionSnapShot.docs.length-1]\n    })\n  } else {\n    postsDb.orderBy('createdAt','desc').where('topic','==',topic).limit(limit).get().then((collectionSnapShot) => {\n      const data = collectionSnapShot.docs.map((doc) => {\n        const id = doc.id\n        return {...doc.data(),id}\n      })\n      handlePosts(data)\n      lastPostSnapshotRef.current = collectionSnapShot.docs[collectionSnapShot.docs.length-1]\n    })\n  }\n}\n\nexport const getNextPagePosts = (topic, limit, handlePosts, lastPostSnapshotRef) => {\n  if(!topic) {\n    postsDb.orderBy('createdAt','desc').limit(limit).get().then((collectionSnapShot) => {\n      const data = collectionSnapShot.docs.map((doc) => {\n        const id = doc.id\n        return {...doc.data(),id}\n      })\n      handlePosts(data)\n      lastPostSnapshotRef.current = collectionSnapShot.docs[collectionSnapShot.docs.length-1]\n    })\n  } else {\n    postsDb.orderBy('createdAt','desc').where('topic','==',topic).limit(limit).get().then((collectionSnapShot) => {\n      const data = collectionSnapShot.docs.map((doc) => {\n        const id = doc.id\n        return {...doc.data(),id}\n      })\n      handlePosts(data)\n      lastPostSnapshotRef.current = collectionSnapShot.docs[collectionSnapShot.docs.length-1]\n    })\n  }\n}\n\nexport const getPostsAmount = (topic, handlePosts) => {\n  if(!topic) {\n    postsDb.get().then(collectionSnapShot => {\n      handlePosts(collectionSnapShot.size)\n    })\n  } else {\n    postsDb.where('topic','==',topic).get().then(collectionSnapShot => {\n      handlePosts(collectionSnapShot.size)\n    })\n  }\n\n}\n\nexport const addNewPost = (image, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc()\n  const imageRef = storage.ref('post-images/' + documentRef.id)\n  const metadata = {\n    contentType: image.type\n  }\n\n  imageRef.put(image, metadata).then(() => {\n    imageRef.getDownloadURL().then((imageUrl) => {\n      documentRef.set({\n        title: postInfo.title,\n        content: postInfo.content,\n        topic: postInfo.topic,\n        createdAt: firebase.firestore.Timestamp.now(),\n        author: {\n          uid: postInfo.userId,\n        },\n        imageUrl\n      })\n      handleSuccess(documentRef.id)\n    })\n  })\n}\n\nexport const updatePost = (postId, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc(postId)\n  documentRef.update({\n    title: postInfo.title,\n    content: postInfo.content,\n    topic: postInfo.topic,\n    updatedAt: firebase.firestore.Timestamp.now(),\n    author: {\n      uid: postInfo.userId,\n    }\n    }).then(() => {\n      handleSuccess(postId)\n    })\n}\n\nexport const updatePostWithNewPic = (postId, image, postInfo, handleSuccess) => {\n  const documentRef = postsDb.doc(postId)\n  const imageRef = storage.ref('post-images/' + documentRef.id)\n  const metadata = {\n    contentType: image.type\n  }\n\n  imageRef.put(image, metadata).then(() => {\n    imageRef.getDownloadURL().then((imageUrl) => {\n      documentRef.update({\n        title: postInfo.title,\n        content: postInfo.content,\n        topic: postInfo.topic,\n        updatedAt: firebase.firestore.Timestamp.now(),\n        author: {\n          uid: postInfo.userId,\n        },\n        imageUrl\n      })\n      handleSuccess(documentRef.id)\n    })\n  })\n}\n\nexport const getMyPostsOnSnapshot = (userId, handlePosts) => {\n  postsDb.where('author.uid','==', userId).onSnapshot((collectionSnapshot) => {\n    const data = collectionSnapshot.docs.map((doc) => {\n      const id = doc.id\n      return { ...doc.data(), id }\n    })\n    handlePosts(data)\n  })\n}\n\nexport const togglePostLiked = (isLiked, postId, userId) => {\n  if(isLiked) {\n    postsDb.doc(postId).update({\n      likedBy: firebase.firestore.FieldValue?.arrayRemove(userId)\n    })\n  } else {\n    postsDb.doc(postId).update({\n      likedBy: firebase.firestore.FieldValue?.arrayUnion(userId)\n    })\n  }\n}\n\nexport const getLikedPosts = (userId, handlePosts) => {\n  postsDb.where('likedBy', 'array-contains', userId).get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handlePosts(data)\n  })\n}\n\nexport const deletePost = (postId) => {\n  postsDb.doc(postId).delete().then(() => {\n    alert('已刪除文章')\n  })\n}\n\n// authors\nexport const getAuthorInfo = (authorId, handleAuthorInfo) => {\n  usersDb.doc(authorId).get().then((userSnapShot) => {\n    handleAuthorInfo(userSnapShot.data())\n  })\n}\n\n// comments\nexport const getCommentsOnSnapshot = (area, id, handleComments) => {\n  db.collection(area).doc(id).collection('comments').orderBy('createdAt','asc').onSnapshot((collectionSnapShot) => {\n     const data = collectionSnapShot.docs.map((doc) => {\n       return {\n         authorUid: doc.data().authorUid,\n         content: doc.data().content,\n         createdAt: doc.data().createdAt\n       }\n     })\n     handleComments(data)\n  })\n}\n\nexport const addNewComment = (area, id, commentContent, authorId) => {\n  return db.collection(area).doc(id).collection('comments').doc().set({\n    content: commentContent,\n    createdAt: firebase.firestore.Timestamp.now(),\n    authorUid: authorId,\n  })\n}\n\n// songs\nexport const getLikedSongs = (userId, handleSongs) => {\n  songsDb.where('likedBy', 'array-contains', userId).get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleSongs(data)\n  })\n}\n\nexport const getSongsOnSnapShot = (handleSongs) => {\n  songsDb.onSnapshot((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleSongs(data)\n  })\n}\n\nexport const toggleSongLiked = (isLiked, songId, userId) => {\n  if(isLiked) {\n    songsDb.doc(songId).update({\n      likedBy: firebase.firestore.FieldValue?.arrayRemove(userId)\n    })\n  } else {\n    songsDb.doc(songId).update({\n      likedBy: firebase.firestore.FieldValue?.arrayUnion(userId)\n    })\n  }\n}\n\nexport const getSongOnSnapShot = (songId, handleSong) => {\n  songsDb.doc(songId).onSnapshot((docSnapshot) => handleSong(docSnapshot.data()))\n}\n\nexport default firebase\n"]},"metadata":{},"sourceType":"module"}