{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\nimport { BoxedEditorUIView, InlineEditableUIView, StickyPanelView, ToolbarView } from 'ckeditor5/src/ui';\nimport '../theme/classiceditor.css';\n/**\n * Classic editor UI view. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\n\nexport default class ClassicEditorUIView extends BoxedEditorUIView {\n  /**\n   * Creates an instance of the classic editor UI view.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n   * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\n   * @param {Object} [options={}] Configuration options for the view instance.\n   * @param {Boolean} [options.shouldToolbarGroupWhenFull] When set `true` enables automatic items grouping\n   * in the main {@link module:editor-classic/classiceditoruiview~ClassicEditorUIView#toolbar toolbar}.\n   * See {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull} to learn more.\n   */\n  constructor(locale, editingView, options = {}) {\n    super(locale);\n    /**\n     * Sticky panel view instance. This is a parent view of a {@link #toolbar}\n     * that makes toolbar sticky.\n     *\n     * @readonly\n     * @member {module:ui/panel/sticky/stickypanelview~StickyPanelView}\n     */\n\n    this.stickyPanel = new StickyPanelView(locale);\n    /**\n     * Toolbar view instance.\n     *\n     * @readonly\n     * @member {module:ui/toolbar/toolbarview~ToolbarView}\n     */\n\n    this.toolbar = new ToolbarView(locale, {\n      shouldGroupWhenFull: options.shouldToolbarGroupWhenFull\n    });\n    /**\n     * Editable UI view.\n     *\n     * @readonly\n     * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n     */\n\n    this.editable = new InlineEditableUIView(locale, editingView);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  render() {\n    super.render(); // Set toolbar as a child of a stickyPanel and makes toolbar sticky.\n\n    this.stickyPanel.content.add(this.toolbar);\n    this.top.add(this.stickyPanel);\n    this.main.add(this.editable);\n  }\n\n}","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditoruiview.js"],"names":["BoxedEditorUIView","InlineEditableUIView","StickyPanelView","ToolbarView","ClassicEditorUIView","constructor","locale","editingView","options","stickyPanel","toolbar","shouldGroupWhenFull","shouldToolbarGroupWhenFull","editable","render","content","add","top","main"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,iBAAT,EAA4BC,oBAA5B,EAAkDC,eAAlD,EAAmEC,WAAnE,QAAsF,kBAAtF;AAEA,OAAO,4BAAP;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,mBAAN,SAAkCJ,iBAAlC,CAAoD;AAClE;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCK,EAAAA,WAAW,CAAEC,MAAF,EAAUC,WAAV,EAAuBC,OAAO,GAAG,EAAjC,EAAsC;AAChD,UAAOF,MAAP;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKG,WAAL,GAAmB,IAAIP,eAAJ,CAAqBI,MAArB,CAAnB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKI,OAAL,GAAe,IAAIP,WAAJ,CAAiBG,MAAjB,EAAyB;AACvCK,MAAAA,mBAAmB,EAAEH,OAAO,CAACI;AADU,KAAzB,CAAf;AAIA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,QAAL,GAAgB,IAAIZ,oBAAJ,CAA0BK,MAA1B,EAAkCC,WAAlC,CAAhB;AACA;AAED;AACD;AACA;;;AACCO,EAAAA,MAAM,GAAG;AACR,UAAMA,MAAN,GADQ,CAGR;;AACA,SAAKL,WAAL,CAAiBM,OAAjB,CAAyBC,GAAzB,CAA8B,KAAKN,OAAnC;AAEA,SAAKO,GAAL,CAASD,GAAT,CAAc,KAAKP,WAAnB;AACA,SAAKS,IAAL,CAAUF,GAAV,CAAe,KAAKH,QAApB;AACA;;AArDiE","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\n\nimport { BoxedEditorUIView, InlineEditableUIView, StickyPanelView, ToolbarView } from 'ckeditor5/src/ui';\n\nimport '../theme/classiceditor.css';\n\n/**\n * Classic editor UI view. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\nexport default class ClassicEditorUIView extends BoxedEditorUIView {\n\t/**\n\t * Creates an instance of the classic editor UI view.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\n\t * @param {Object} [options={}] Configuration options for the view instance.\n\t * @param {Boolean} [options.shouldToolbarGroupWhenFull] When set `true` enables automatic items grouping\n\t * in the main {@link module:editor-classic/classiceditoruiview~ClassicEditorUIView#toolbar toolbar}.\n\t * See {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull} to learn more.\n\t */\n\tconstructor( locale, editingView, options = {} ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Sticky panel view instance. This is a parent view of a {@link #toolbar}\n\t\t * that makes toolbar sticky.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/sticky/stickypanelview~StickyPanelView}\n\t\t */\n\t\tthis.stickyPanel = new StickyPanelView( locale );\n\n\t\t/**\n\t\t * Toolbar view instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.toolbar = new ToolbarView( locale, {\n\t\t\tshouldGroupWhenFull: options.shouldToolbarGroupWhenFull\n\t\t} );\n\n\t\t/**\n\t\t * Editable UI view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n\t\t */\n\t\tthis.editable = new InlineEditableUIView( locale, editingView );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Set toolbar as a child of a stickyPanel and makes toolbar sticky.\n\t\tthis.stickyPanel.content.add( this.toolbar );\n\n\t\tthis.top.add( this.stickyPanel );\n\t\tthis.main.add( this.editable );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}