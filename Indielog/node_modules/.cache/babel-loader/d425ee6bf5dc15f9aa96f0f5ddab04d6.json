{"ast":null,"code":"var _jsxFileName = \"/Users/fanyukun/Documents/react/indielog/src/components/Controls/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SignPanel from '../SignPanel';\nimport Header from '../Header';\nimport SideBar from '../SideBar';\nimport { getSongsOnSnapShot, checkUserStatus } from '../../utils/firebase.js';\nimport 'firebase/compat/auth';\nimport { setUser } from '../../redux/reducers/userReducer';\nimport { setSongs, setCurrentSong } from \"../../redux/reducers/songReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Controls = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(store => store.user.currentUser);\n  const [isOpenSideBar, setIsOpenSideBar] = useState(false);\n  const [isOpenSignPanel, setIsOpenSignPanel] = useState(false);\n\n  function toggleSideBar() {\n    setIsOpenSideBar(!isOpenSideBar);\n  }\n\n  function toggleSignPanel() {\n    setIsOpenSignPanel(!isOpenSignPanel);\n  }\n\n  function handleUser(res) {\n    dispatch(setUser(res));\n  }\n\n  function handleDefaultSongs(res) {\n    dispatch(setSongs(res));\n    dispatch(setCurrentSong(res[0]));\n  }\n\n  useEffect(() => {\n    getSongsOnSnapShot(handleDefaultSongs);\n    checkUserStatus(handleUser);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isOpenSignPanel && !user && /*#__PURE__*/_jsxDEV(SignPanel, {\n      isOpenSignPanel: isOpenSignPanel,\n      toggleSignPanel: toggleSignPanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      isOpenSignPanel: isOpenSignPanel,\n      toggleSignPanel: toggleSignPanel,\n      toggleSideBar: toggleSideBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      toggleSignPanel: toggleSignPanel,\n      isOpenSideBar: isOpenSideBar,\n      toggleSideBar: toggleSideBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Controls, \"yoyK1+NXLHtLZJge4qqeUecmje8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Controls;\nexport default Controls;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/components/Controls/index.js"],"names":["useState","useEffect","useDispatch","useSelector","SignPanel","Header","SideBar","getSongsOnSnapShot","checkUserStatus","setUser","setSongs","setCurrentSong","Controls","dispatch","user","store","currentUser","isOpenSideBar","setIsOpenSideBar","isOpenSignPanel","setIsOpenSignPanel","toggleSideBar","toggleSignPanel","handleUser","res","handleDefaultSongs"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,yBAApD;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,kCAAzC;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWE,WAAvB,CAAxB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,KAAD,CAAtD;;AAEA,WAASqB,aAAT,GAAwB;AACtBH,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD;;AAED,WAASK,eAAT,GAA0B;AACxBF,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD;;AAED,WAASI,UAAT,CAAoBC,GAApB,EAAwB;AACtBX,IAAAA,QAAQ,CAACJ,OAAO,CAACe,GAAD,CAAR,CAAR;AACD;;AAED,WAASC,kBAAT,CAA4BD,GAA5B,EAAgC;AAC9BX,IAAAA,QAAQ,CAACH,QAAQ,CAACc,GAAD,CAAT,CAAR;AACAX,IAAAA,QAAQ,CAACF,cAAc,CAACa,GAAG,CAAC,CAAD,CAAJ,CAAf,CAAR;AACD;;AAEDvB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,kBAAkB,CAACkB,kBAAD,CAAlB;AACAjB,IAAAA,eAAe,CAACe,UAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,eACEJ,eAAe,IAAI,CAACL,IAArB,iBACC,QAAC,SAAD;AACA,MAAA,eAAe,EAAEK,eADjB;AAEA,MAAA,eAAe,EAAEG;AAFjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAOA,QAAC,MAAD;AACE,MAAA,eAAe,EAAEH,eADnB;AAEE,MAAA,eAAe,EAAEG,eAFnB;AAGE,MAAA,aAAa,EAAED;AAHjB;AAAA;AAAA;AAAA;AAAA,YAPA,eAYA,QAAC,OAAD;AACE,MAAA,eAAe,EAAEC,eADnB;AAEE,MAAA,aAAa,EAAEL,aAFjB;AAGE,MAAA,aAAa,EAAEI;AAHjB;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA,kBADF;AAoBD,CAhDD;;GAAMT,Q;UACaV,W,EACJC,W;;;KAFTS,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport SignPanel from '../SignPanel'\nimport Header from '../Header'\nimport SideBar from '../SideBar'\nimport { getSongsOnSnapShot, checkUserStatus } from '../../utils/firebase.js'\nimport 'firebase/compat/auth'\nimport { setUser } from '../../redux/reducers/userReducer'\nimport { setSongs, setCurrentSong } from \"../../redux/reducers/songReducer\"\n\n\nconst Controls = () => {\n  const dispatch = useDispatch()\n  const user = useSelector((store) => store.user.currentUser)\n  const [isOpenSideBar, setIsOpenSideBar] = useState(false)\n  const [isOpenSignPanel, setIsOpenSignPanel] = useState(false)\n\n  function toggleSideBar(){\n    setIsOpenSideBar(!isOpenSideBar)\n  }\n\n  function toggleSignPanel(){\n    setIsOpenSignPanel(!isOpenSignPanel)\n  }\n\n  function handleUser(res){\n    dispatch(setUser(res))\n  }\n\n  function handleDefaultSongs(res){\n    dispatch(setSongs(res))\n    dispatch(setCurrentSong(res[0]))\n  }\n\n  useEffect(() => {\n    getSongsOnSnapShot(handleDefaultSongs)\n    checkUserStatus(handleUser)\n  }, [])\n\n  return (\n    <>\n    {(isOpenSignPanel && !user) &&\n      <SignPanel\n      isOpenSignPanel={isOpenSignPanel}\n      toggleSignPanel={toggleSignPanel}\n      />\n    }\n    <Header\n      isOpenSignPanel={isOpenSignPanel}\n      toggleSignPanel={toggleSignPanel}\n      toggleSideBar={toggleSideBar}\n    />\n    <SideBar\n      toggleSignPanel={toggleSignPanel}\n      isOpenSideBar={isOpenSideBar}\n      toggleSideBar={toggleSideBar}\n    />\n    </>\n  )\n}\n\nexport default Controls\n"]},"metadata":{},"sourceType":"module"}