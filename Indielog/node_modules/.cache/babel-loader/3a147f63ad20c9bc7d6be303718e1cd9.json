{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjquiByhMI0pc7g_Cx482Kp2tK-c1mlQ8\",\n  authDomain: \"indielog-172c8.firebaseapp.com\",\n  projectId: \"indielog-172c8\",\n  storageBucket: \"indielog-172c8.appspot.com\",\n  messagingSenderId: \"97403270536\",\n  appId: \"1:97403270536:web:5ea48f5aa3c58801bdf63d\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst usersDb = db.collection('users');\nconst postsDb = db.collection('posts');\nconst songsDb = db.collection('songs');\nconst topicsDb = db.collection('topics');\nexport const checkUserStatus = handleUser => {\n  auth.onAuthStateChanged(user => {\n    if (user) {\n      handleUser({\n        uid: user.uid,\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL\n      });\n    } else {\n      handleUser(null);\n    }\n  });\n};\nexport const getTopics = handleTopics => {\n  topicsDb.get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handleTopics(data);\n  });\n};\nexport const getPostsWithoutTopic = handlePosts => {\n  postsDb.orderBy('createdAt', 'desc').get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handlePosts(data);\n  });\n};\nexport const getPostsWithTopic = (topic, handlePosts) => {\n  postsDb.orderBy('createdAt', 'desc').where('topic', '==', topic).get().then(collectionSnapShot => {\n    const data = collectionSnapShot.docs.map(doc => {\n      const id = doc.id;\n      return { ...doc.data(),\n        id\n      };\n    });\n    handlePosts(data);\n  });\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/indielog/src/utils/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","auth","usersDb","collection","postsDb","songsDb","topicsDb","checkUserStatus","handleUser","onAuthStateChanged","user","uid","displayName","email","photoURL","getTopics","handleTopics","get","then","collectionSnapShot","data","docs","map","doc","id","getPostsWithoutTopic","handlePosts","orderBy","getPostsWithTopic","topic","where"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;AACA,OAAO,yBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,gCAFS;AAGrBC,EAAAA,SAAS,EAAE,gBAHU;AAIrBC,EAAAA,aAAa,EAAE,4BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,aALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AASAP,QAAQ,CAACQ,aAAT,CAAuBP,cAAvB;AAEA,MAAMQ,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAX;AACA,MAAMC,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACA,MAAMC,OAAO,GAAGH,EAAE,CAACI,UAAH,CAAc,OAAd,CAAhB;AACA,MAAMC,OAAO,GAAGL,EAAE,CAACI,UAAH,CAAc,OAAd,CAAhB;AACA,MAAME,OAAO,GAAGN,EAAE,CAACI,UAAH,CAAc,OAAd,CAAhB;AACA,MAAMG,QAAQ,GAAGP,EAAE,CAACI,UAAH,CAAc,QAAd,CAAjB;AAEA,OAAO,MAAMI,eAAe,GAAIC,UAAD,IAAgB;AAC7CP,EAAAA,IAAI,CAACQ,kBAAL,CAAyBC,IAAD,IAAU;AAChC,QAAGA,IAAH,EAAS;AACPF,MAAAA,UAAU,CAAC;AACTG,QAAAA,GAAG,EAAED,IAAI,CAACC,GADD;AAETC,QAAAA,WAAW,EAAEF,IAAI,CAACE,WAFT;AAGTC,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAHH;AAITC,QAAAA,QAAQ,EAAEJ,IAAI,CAACI;AAJN,OAAD,CAAV;AAMD,KAPD,MAOO;AACLN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMO,SAAS,GAAIC,YAAD,IAAkB;AACzCV,EAAAA,QAAQ,CAACW,GAAT,GAAeC,IAAf,CAAqBC,kBAAD,IAAwB;AAC1C,UAAMC,IAAI,GAAGD,kBAAkB,CAACE,IAAnB,CAAwBC,GAAxB,CAA6BC,GAAD,IAAS;AAChD,YAAMC,EAAE,GAAGD,GAAG,CAACC,EAAf;AACA,aAAO,EAAC,GAAGD,GAAG,CAACH,IAAJ,EAAJ;AAAeI,QAAAA;AAAf,OAAP;AACD,KAHY,CAAb;AAIAR,IAAAA,YAAY,CAACI,IAAD,CAAZ;AACD,GAND;AAOD,CARM;AAUP,OAAO,MAAMK,oBAAoB,GAAIC,WAAD,IAAiB;AACnDtB,EAAAA,OAAO,CAACuB,OAAR,CAAgB,WAAhB,EAA4B,MAA5B,EAAoCV,GAApC,GAA0CC,IAA1C,CAAgDC,kBAAD,IAAwB;AACrE,UAAMC,IAAI,GAAGD,kBAAkB,CAACE,IAAnB,CAAwBC,GAAxB,CAA6BC,GAAD,IAAS;AAChD,YAAMC,EAAE,GAAGD,GAAG,CAACC,EAAf;AACA,aAAO,EAAC,GAAGD,GAAG,CAACH,IAAJ,EAAJ;AAAeI,QAAAA;AAAf,OAAP;AACD,KAHY,CAAb;AAIAE,IAAAA,WAAW,CAACN,IAAD,CAAX;AACD,GAND;AAOD,CARM;AAUP,OAAO,MAAMQ,iBAAiB,GAAG,CAACC,KAAD,EAAQH,WAAR,KAAwB;AACvDtB,EAAAA,OAAO,CAACuB,OAAR,CAAgB,WAAhB,EAA4B,MAA5B,EAAoCG,KAApC,CAA0C,OAA1C,EAAkD,IAAlD,EAAuDD,KAAvD,EAA8DZ,GAA9D,GAAoEC,IAApE,CAA0EC,kBAAD,IAAwB;AAC/F,UAAMC,IAAI,GAAGD,kBAAkB,CAACE,IAAnB,CAAwBC,GAAxB,CAA6BC,GAAD,IAAS;AAChD,YAAMC,EAAE,GAAGD,GAAG,CAACC,EAAf;AACA,aAAO,EAAC,GAAGD,GAAG,CAACH,IAAJ,EAAJ;AAAeI,QAAAA;AAAf,OAAP;AACD,KAHY,CAAb;AAIAE,IAAAA,WAAW,CAACN,IAAD,CAAX;AACD,GAND;AAOD,CARM;AAUP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/firestore'\nimport 'firebase/compat/storage'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjquiByhMI0pc7g_Cx482Kp2tK-c1mlQ8\",\n  authDomain: \"indielog-172c8.firebaseapp.com\",\n  projectId: \"indielog-172c8\",\n  storageBucket: \"indielog-172c8.appspot.com\",\n  messagingSenderId: \"97403270536\",\n  appId: \"1:97403270536:web:5ea48f5aa3c58801bdf63d\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst usersDb = db.collection('users')\nconst postsDb = db.collection('posts')\nconst songsDb = db.collection('songs')\nconst topicsDb = db.collection('topics')\n\nexport const checkUserStatus = (handleUser) => {\n  auth.onAuthStateChanged((user) => {\n    if(user) {\n      handleUser({\n        uid: user.uid,\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL\n      })\n    } else {\n      handleUser(null)\n    }\n  })\n}\n\nexport const getTopics = (handleTopics) => {\n  topicsDb.get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handleTopics(data)\n  })\n}\n\nexport const getPostsWithoutTopic = (handlePosts) => {\n  postsDb.orderBy('createdAt','desc').get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handlePosts(data)\n  })\n}\n\nexport const getPostsWithTopic = (topic, handlePosts) => {\n  postsDb.orderBy('createdAt','desc').where('topic','==',topic).get().then((collectionSnapShot) => {\n    const data = collectionSnapShot.docs.map((doc) => {\n      const id = doc.id\n      return {...doc.data(),id}\n    })\n    handlePosts(data)\n  })\n}\n\nexport default firebase\n"]},"metadata":{},"sourceType":"module"}