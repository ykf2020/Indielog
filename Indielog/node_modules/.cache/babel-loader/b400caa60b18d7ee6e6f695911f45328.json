{"ast":null,"code":"import _objectSpread from\"/Users/fanyukun/Documents/react/Indielog/Indielog/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{Container,ImgDiv,InfoContainer,SongName,AuthorName,IconContainer,FontAwesome,Track,AnimateTrack,InputRange}from'./MusicPlayerSmallElements.js';import{faSlidersH,faPlay,faPause}from'@fortawesome/free-solid-svg-icons';import{useDispatch,useSelector}from\"react-redux\";import{setSongPlayingInfo,setIsPlaying,setMode}from\"../../redux/reducers/playerControlReducer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MusicPlayerSmall=function MusicPlayerSmall(_ref){var audioRef=_ref.audioRef;var dispatch=useDispatch();var isPlaying=useSelector(function(store){return store.playerControl.isPlaying;});var currentSong=useSelector(function(store){return store.song.currentSong;});var songPlayingInfo=useSelector(function(store){return store.playerControl.songPlayingInfo;});var dragHandler=function dragHandler(e){audioRef.current.currentTime=e.target.value;dispatch(setSongPlayingInfo(_objectSpread(_objectSpread({},songPlayingInfo),{},{currentTime:e.target.value})));};var playSongHandler=function playSongHandler(){dispatch(setIsPlaying(!isPlaying));};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Track,{children:[/*#__PURE__*/_jsx(InputRange,{min:0,max:songPlayingInfo.duration,value:songPlayingInfo.currentTime,onChange:dragHandler,type:\"range\"}),/*#__PURE__*/_jsx(AnimateTrack,{animationPercentage:songPlayingInfo.animationPercentage})]}),/*#__PURE__*/_jsx(ImgDiv,{children:/*#__PURE__*/_jsx(\"img\",{alt:\"\",src:currentSong.cover})}),/*#__PURE__*/_jsxs(InfoContainer,{children:[/*#__PURE__*/_jsx(SongName,{children:currentSong.name}),/*#__PURE__*/_jsx(AuthorName,{children:currentSong.artist})]}),/*#__PURE__*/_jsxs(IconContainer,{children:[/*#__PURE__*/_jsx(FontAwesome,{onClick:playSongHandler,size:\"1x\",icon:isPlaying?faPause:faPlay}),/*#__PURE__*/_jsx(FontAwesome,{onClick:function onClick(){return dispatch(setMode(2));},size:\"1x\",icon:faSlidersH})]})]})});};export default MusicPlayerSmall;","map":{"version":3,"sources":["/Users/fanyukun/Documents/react/Indielog/Indielog/src/components/MusicPlayerSmall/index.js"],"names":["Container","ImgDiv","InfoContainer","SongName","AuthorName","IconContainer","FontAwesome","Track","AnimateTrack","InputRange","faSlidersH","faPlay","faPause","useDispatch","useSelector","setSongPlayingInfo","setIsPlaying","setMode","MusicPlayerSmall","audioRef","dispatch","isPlaying","store","playerControl","currentSong","song","songPlayingInfo","dragHandler","e","current","currentTime","target","value","playSongHandler","duration","animationPercentage","cover","name","artist"],"mappings":"mIAAA,OACEA,SADF,CAEEC,MAFF,CAGEC,aAHF,CAIEC,QAJF,CAKEC,UALF,CAMEC,aANF,CAOEC,WAPF,CAQEC,KARF,CASEC,YATF,CAUEC,UAVF,KAWQ,+BAXR,CAYA,OACEC,UADF,CAEEC,MAFF,CAGEC,OAHF,KAIO,mCAJP,CAKA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,kBAAT,CAA6BC,YAA7B,CAA2CC,OAA3C,KAA0D,2CAA1D,C,6IAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACzC,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,SAAS,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,aAAN,CAAoBF,SAA/B,EAAD,CAA7B,CACA,GAAMG,CAAAA,WAAW,CAAGV,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACG,IAAN,CAAWD,WAAtB,EAAD,CAA/B,CACA,GAAME,CAAAA,eAAe,CAAGZ,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,aAAN,CAAoBG,eAA/B,EAAD,CAAnC,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACzBT,QAAQ,CAACU,OAAT,CAAiBC,WAAjB,CAA+BF,CAAC,CAACG,MAAF,CAASC,KAAxC,CACAZ,QAAQ,CAACL,kBAAkB,gCAAKW,eAAL,MAAsBI,WAAW,CAAEF,CAAC,CAACG,MAAF,CAASC,KAA5C,GAAnB,CAAR,CACD,CAHD,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5Bb,QAAQ,CAACJ,YAAY,CAAC,CAACK,SAAF,CAAb,CAAR,CACD,CAFD,CAIA,mBACE,sCACE,MAAC,SAAD,yBACE,MAAC,KAAD,yBACE,KAAC,UAAD,EACE,GAAG,CAAE,CADP,CAEE,GAAG,CAAEK,eAAe,CAACQ,QAFvB,CAGE,KAAK,CAAER,eAAe,CAACI,WAHzB,CAIE,QAAQ,CAAEH,WAJZ,CAKE,IAAI,CAAC,OALP,EADF,cAQE,KAAC,YAAD,EAAc,mBAAmB,CAAED,eAAe,CAACS,mBAAnD,EARF,GADF,cAWE,KAAC,MAAD,wBACE,YAAK,GAAG,CAAC,EAAT,CAAY,GAAG,CAAEX,WAAW,CAACY,KAA7B,EADF,EAXF,cAcE,MAAC,aAAD,yBACE,KAAC,QAAD,WAAWZ,WAAW,CAACa,IAAvB,EADF,cAEE,KAAC,UAAD,WAAab,WAAW,CAACc,MAAzB,EAFF,GAdF,cAkBE,MAAC,aAAD,yBACE,KAAC,WAAD,EAAa,OAAO,CAAEL,eAAtB,CAAuC,IAAI,CAAC,IAA5C,CAAiD,IAAI,CAAEZ,SAAS,CAAGT,OAAH,CAAaD,MAA7E,EADF,cAEE,KAAC,WAAD,EAAa,OAAO,CAAE,yBAAMS,CAAAA,QAAQ,CAACH,OAAO,CAAC,CAAD,CAAR,CAAd,EAAtB,CAAkD,IAAI,CAAC,IAAvD,CAA4D,IAAI,CAAEP,UAAlE,EAFF,GAlBF,GADF,EADF,CA2BD,CAxCD,CA0CA,cAAeQ,CAAAA,gBAAf","sourcesContent":["import {\n  Container,\n  ImgDiv,\n  InfoContainer,\n  SongName,\n  AuthorName,\n  IconContainer,\n  FontAwesome,\n  Track,\n  AnimateTrack,\n  InputRange,\n } from './MusicPlayerSmallElements.js'\nimport {\n  faSlidersH,\n  faPlay,\n  faPause\n} from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSongPlayingInfo, setIsPlaying, setMode } from \"../../redux/reducers/playerControlReducer\"\n\nconst MusicPlayerSmall = ({ audioRef }) => {\n  const dispatch = useDispatch()\n  const isPlaying = useSelector((store) => store.playerControl.isPlaying)\n  const currentSong = useSelector((store) => store.song.currentSong)\n  const songPlayingInfo = useSelector((store) => store.playerControl.songPlayingInfo)\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value\n    dispatch(setSongPlayingInfo({...songPlayingInfo, currentTime: e.target.value}))\n  }\n  const playSongHandler = () => {\n    dispatch(setIsPlaying(!isPlaying))\n  }\n\n  return (\n    <>\n      <Container>\n        <Track>\n          <InputRange\n            min={0}\n            max={songPlayingInfo.duration}\n            value={songPlayingInfo.currentTime}\n            onChange={dragHandler}\n            type=\"range\"\n          />\n          <AnimateTrack animationPercentage={songPlayingInfo.animationPercentage}/>\n        </Track>\n        <ImgDiv>\n          <img alt='' src={currentSong.cover}/>\n        </ImgDiv>\n        <InfoContainer>\n          <SongName>{currentSong.name}</SongName>\n          <AuthorName>{currentSong.artist}</AuthorName>\n        </InfoContainer>\n        <IconContainer>\n          <FontAwesome onClick={playSongHandler} size=\"1x\" icon={isPlaying ? faPause : faPlay}/>\n          <FontAwesome onClick={() => dispatch(setMode(2))} size=\"1x\" icon={faSlidersH}/>\n        </IconContainer>\n      </Container>\n    </>\n  )\n}\n\nexport default MusicPlayerSmall\n"]},"metadata":{},"sourceType":"module"}